import React from 'react';
import { ReactThreeFiber } from 'react-three-fiber';
import { TrackballControls as TrackballControlsImpl } from 'three/examples/jsm/controls/TrackballControls';
declare type TrackballControls = ReactThreeFiber.Object3DNode<TrackballControlsImpl, typeof TrackballControlsImpl>;
declare global {
    namespace JSX {
        interface IntrinsicElements {
            trackballControlsImpl: TrackballControls;
        }
    }
}
export declare const TrackballControls: React.ForwardRefExoticComponent<Pick<ReactThreeFiber.Object3DNode<TrackballControlsImpl, typeof TrackballControlsImpl>, "object" | "attach" | "attachArray" | "attachObject" | "args" | "children" | "key" | "onUpdate" | "position" | "up" | "scale" | "rotation" | "matrix" | "dispose" | "update" | "addEventListener" | "hasEventListener" | "removeEventListener" | "dispatchEvent" | "onClick" | "onPointerUp" | "onPointerDown" | "onPointerOver" | "onPointerOut" | "onPointerMove" | "onWheel" | "screen" | "reset" | "enabled" | "domElement" | "target" | "minDistance" | "maxDistance" | "zoomSpeed" | "rotateSpeed" | "panSpeed" | "keys" | "noRotate" | "noZoom" | "noPan" | "noRoll" | "staticMoving" | "dynamicDampingFactor" | "position0" | "target0" | "up0" | "checkDistances" | "zoomCamera" | "panCamera" | "rotateCamera" | "handleResize"> & React.RefAttributes<unknown>>;
export {};
