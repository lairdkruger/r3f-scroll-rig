{"ast":null,"code":"import _slicedToArray from \"/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/index.js\";\nimport { render } from 'react-dom';\nimport React, { useState, useEffect, useRef, Suspense } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { Block } from './components/Blocks';\nimport HtmlContent from './components/HtmlContent';\nimport { Shapes } from './components/Shapes';\nimport Box from './components/shapes/Box';\nimport Storm from './components/shapes/Storm';\nimport state from './store';\nimport './styles.css';\nimport FlatCamera from './components/camera/FlatCamera';\nimport FlatLighting from './components/lighting/FlatLighting';\nimport Postprocessing from './components/postprocessing/Postprocessing';\nimport ImagePlane from './components/media/ImagePlane';\n\nfunction App() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const domContent = useRef();\n  const scrollArea = useRef(); // Scroll an area by updating state.top.current\n\n  const onScroll = e => state.top.current = e.target.scrollTop;\n\n  useEffect(() => void onScroll({\n    target: scrollArea.current\n  }), []);\n  const perspective = 800;\n  const fov = 180 * (2 * Math.atan(window.innerHeight / 2 / perspective)) / Math.PI;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    gl: {\n      alpha: true,\n      antialias: true\n    },\n    onCreated: ({\n      gl,\n      events\n    }) => {\n      // Export canvas events, we will put them onto the scroll area (hovers, clicks etc)\n      setEvents(events);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlatCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FlatLighting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Block, {\n    factor: 1.5,\n    offset: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Storm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HtmlContent, {\n    portal: domContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"r3f\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), \"scroll\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), \"rig.\")))), /*#__PURE__*/React.createElement(Block, {\n    factor: 1.5,\n    offset: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HtmlContent, {\n    portal: domContent,\n    className: \"section-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-id\": \"1\",\n    className: \"image-plane\",\n    src: \"media/images/ShaderPlane.png\",\n    alt: \"melon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(HtmlContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Loading Image\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ImagePlane, {\n    color: \"#bfe2ca\",\n    src: \"media/images/ShaderPlane.png\",\n    image_id: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Block, {\n    factor: 1.5,\n    offset: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HtmlContent, {\n    portal: domContent,\n    className: \"section-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"r3f\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), \"scroll\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), \"rig.\"))), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Postprocessing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"scrollArea\",\n    ref: scrollArea,\n    onScroll: onScroll\n  }, events, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'sticky',\n      top: 0\n    },\n    ref: domContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"\".concat(state.pages * 100, \"vh\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n}\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 8\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/index.js"],"names":["render","React","useState","useEffect","useRef","Suspense","Canvas","Block","HtmlContent","Shapes","Box","Storm","state","FlatCamera","FlatLighting","Postprocessing","ImagePlane","App","events","setEvents","domContent","scrollArea","onScroll","e","top","current","target","scrollTop","perspective","fov","Math","atan","window","innerHeight","PI","alpha","antialias","gl","position","height","pages","document","querySelector"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'\nimport React, { useState, useEffect, useRef, Suspense } from 'react'\nimport { Canvas } from 'react-three-fiber'\n\nimport { Block } from './components/Blocks'\nimport HtmlContent from './components/HtmlContent'\n\nimport { Shapes } from './components/Shapes'\nimport Box from './components/shapes/Box'\nimport Storm from './components/shapes/Storm'\nimport state from './store'\nimport './styles.css'\nimport FlatCamera from './components/camera/FlatCamera'\nimport FlatLighting from './components/lighting/FlatLighting'\nimport Postprocessing from './components/postprocessing/Postprocessing'\n\nimport ImagePlane from './components/media/ImagePlane'\n\nfunction App() {\n  const [events, setEvents] = useState()\n  const domContent = useRef()\n  const scrollArea = useRef()\n  // Scroll an area by updating state.top.current\n  const onScroll = (e) => (state.top.current = e.target.scrollTop)\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\n\n  const perspective = 800\n  const fov = (180 * (2 * Math.atan(window.innerHeight / 2 / perspective))) / Math.PI\n\n  return (\n    <>\n      <Canvas\n        colorManagement\n        gl={{ alpha: true, antialias: true }}\n        onCreated={({ gl, events }) => {\n          // Export canvas events, we will put them onto the scroll area (hovers, clicks etc)\n          setEvents(events)\n        }}>\n        <FlatCamera />\n        <FlatLighting />\n\n        <Block factor={1.5} offset={0}>\n          <Storm />\n          <HtmlContent portal={domContent}>\n            <div className=\"jumbo\">\n              <h1>\n                r3f\n                <br />\n                scroll\n                <br />\n                rig.\n              </h1>\n            </div>\n          </HtmlContent>\n        </Block>\n\n        <Block factor={1.5} offset={1}>\n          <HtmlContent portal={domContent} className=\"section-box\">\n            <div className=\"image-box\">\n              <img data-id=\"1\" className=\"image-plane\" src=\"media/images/ShaderPlane.png\" alt=\"melon\" />\n            </div>\n          </HtmlContent>\n          <Suspense\n            fallback={\n              <HtmlContent>\n                <h1>Loading Image</h1>\n              </HtmlContent>\n            }>\n            <ImagePlane color=\"#bfe2ca\" src=\"media/images/ShaderPlane.png\" image_id=\"1\" />\n          </Suspense>\n        </Block>\n\n        <Block factor={1.5} offset={2}>\n          <HtmlContent portal={domContent} className=\"section-box\">\n            <h1>\n              r3f\n              <br />\n              scroll\n              <br />\n              rig.\n            </h1>\n          </HtmlContent>\n        </Block>\n\n        <Suspense fallback={null}>\n          <Postprocessing />\n        </Suspense>\n      </Canvas>\n\n      {/* container with events */}\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll} {...events}>\n        {/* content container containing all html elements */}\n        <div style={{ position: 'sticky', top: 0 }} ref={domContent} />\n        {/* sizer for the scroll area */}\n        <div style={{ height: `${state.pages * 100}vh` }} />\n      </div>\n    </>\n  )\n}\n\nrender(<App />, document.querySelector('#root'))\n"]},"metadata":{},"sourceType":"module"}