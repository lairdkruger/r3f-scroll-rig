{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/HtmlContent.js\";\nimport React, { useRef } from 'react';\nimport { useThree } from 'react-three-fiber';\nimport { HTML } from 'drei';\nimport { extend } from 'react-three-fiber';\nimport * as THREE from 'three'; // drei component tying html elements to any object in a scene\n// portal: target container\n\nfunction HtmlContent({\n  className,\n  style,\n  children,\n  portal\n}) {\n  const _useThree = useThree(),\n        size = _useThree.size;\n\n  return /*#__PURE__*/React.createElement(HTML, {\n    portal: portal,\n    style: {\n      position: 'absolute',\n      top: -size.height / 2,\n      left: -size.width / 2,\n      width: size.width,\n      height: size.height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nfunction HtmlWithImage({\n  className,\n  style,\n  children,\n  portal\n}) {\n  const _useThree2 = useThree(),\n        size = _useThree2.size;\n\n  const imagePlane = useRef();\n  const loader = new THREE.TextureLoader();\n  const sizes = new THREE.Vector2(0, 0);\n  const offset = new THREE.Vector2(0, 0);\n\n  const _imagePlane$current$g = imagePlane.current.getBoundingClientRect(),\n        width = _imagePlane$current$g.width,\n        height = _imagePlane$current$g.height,\n        top = _imagePlane$current$g.top,\n        left = _imagePlane$current$g.left;\n\n  sizes.set(width, height);\n  offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2);\n  return /*#__PURE__*/React.createElement(HTML, {\n    portal: portal,\n    style: {\n      position: 'absolute',\n      top: -size.height / 2,\n      left: -size.width / 2,\n      width: size.width,\n      height: size.height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nextend({\n  HtmlWithImage\n});\nexport { HtmlContent };","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/HtmlContent.js"],"names":["React","useRef","useThree","HTML","extend","THREE","HtmlContent","className","style","children","portal","size","position","top","height","left","width","HtmlWithImage","imagePlane","loader","TextureLoader","sizes","Vector2","offset","current","getBoundingClientRect","set","window","innerWidth","innerHeight"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport { useThree } from 'react-three-fiber'\nimport { HTML } from 'drei'\nimport { extend } from 'react-three-fiber'\nimport * as THREE from 'three'\n\n// drei component tying html elements to any object in a scene\n// portal: target container\n\nfunction HtmlContent({ className, style, children, portal }) {\n  const { size } = useThree()\n  return (\n    <HTML\n      portal={portal}\n      style={{\n        position: 'absolute',\n        top: -size.height / 2,\n        left: -size.width / 2,\n        width: size.width,\n        height: size.height\n      }}>\n      <div className={className} style={style}>\n        {children}\n      </div>\n    </HTML>\n  )\n}\n\nfunction HtmlWithImage({ className, style, children, portal }) {\n  const { size } = useThree()\n  const imagePlane = useRef()\n\n  const loader = new THREE.TextureLoader()\n\n  const sizes = new THREE.Vector2(0, 0)\n  const offset = new THREE.Vector2(0, 0)\n\n  const { width, height, top, left } = imagePlane.current.getBoundingClientRect()\n\n  sizes.set(width, height)\n  offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2)\n\n  return (\n    <HTML\n      portal={portal}\n      style={{\n        position: 'absolute',\n        top: -size.height / 2,\n        left: -size.width / 2,\n        width: size.width,\n        height: size.height\n      }}>\n      <div className={className} style={style}>\n        {children}\n      </div>\n    </HTML>\n  )\n}\n\nextend({ HtmlWithImage })\n\nexport { HtmlContent }\n"]},"metadata":{},"sourceType":"module"}