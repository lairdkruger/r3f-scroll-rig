{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/camera/FlatCamera.js\";\nimport React from 'react';\nimport { PerspectiveCamera } from 'drei'; // A standard camera adjusted so that 1 unit == 1 px\n// Use to make 3D planes appear as 2D HTML images\n\nfunction FlatCamera() {\n  const perspective = 800;\n  const fov = 180 * (2 * Math.atan(window.innerHeight / 2 / perspective)) / Math.PI;\n  return /*#__PURE__*/React.createElement(PerspectiveCamera, {\n    makeDefault: true // Registers it as the default camera system-wide (default=false)\n    ,\n    position: [0, 0, perspective],\n    fov: fov // All THREE.PerspectiveCamera props are valid\n    ,\n    aspect: window.innerWidth / window.innerHeight,\n    near: 1,\n    far: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default FlatCamera;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/camera/FlatCamera.js"],"names":["React","PerspectiveCamera","FlatCamera","perspective","fov","Math","atan","window","innerHeight","PI","innerWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,MAAlC,C,CAEA;AACA;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,WAAW,GAAG,GAApB;AACA,QAAMC,GAAG,GAAI,OAAO,IAAIC,IAAI,CAACC,IAAL,CAAUC,MAAM,CAACC,WAAP,GAAqB,CAArB,GAAyBL,WAAnC,CAAX,CAAD,GAAgEE,IAAI,CAACI,EAAjF;AAEA,sBACE,oBAAC,iBAAD;AACE,IAAA,WAAW,MADb,CACc;AADd;AAEE,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAON,WAAP,CAFZ;AAGE,IAAA,GAAG,EAAEC,GAHP,CAGY;AAHZ;AAIE,IAAA,MAAM,EAAEG,MAAM,CAACG,UAAP,GAAoBH,MAAM,CAACC,WAJrC;AAKE,IAAA,IAAI,EAAE,CALR;AAME,IAAA,GAAG,EAAE,IANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD;;AAED,eAAeN,UAAf","sourcesContent":["import React from 'react'\nimport { PerspectiveCamera } from 'drei'\n\n// A standard camera adjusted so that 1 unit == 1 px\n// Use to make 3D planes appear as 2D HTML images\n\nfunction FlatCamera() {\n  const perspective = 800\n  const fov = (180 * (2 * Math.atan(window.innerHeight / 2 / perspective))) / Math.PI\n\n  return (\n    <PerspectiveCamera\n      makeDefault // Registers it as the default camera system-wide (default=false)\n      position={[0, 0, perspective]}\n      fov={fov} // All THREE.PerspectiveCamera props are valid\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={1000}></PerspectiveCamera>\n  )\n}\n\nexport default FlatCamera\n"]},"metadata":{},"sourceType":"module"}