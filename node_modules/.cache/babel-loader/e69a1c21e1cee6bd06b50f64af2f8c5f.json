{"ast":null,"code":"import _objectWithoutProperties from \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js\";\nimport React, { useRef } from 'react';\nimport * as THREE from 'three';\nimport './materials/ImageMaterial';\nimport { useLoader } from 'react-three-fiber'; // A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane(_ref) {\n  let _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'white' : _ref$color,\n      src = _ref.src,\n      props = _objectWithoutProperties(_ref, [\"color\", \"src\"]);\n\n  const material = useRef();\n  const texture = useLoader(THREE.TextureLoader, src);\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"customMaterial\", {\n    ref: material,\n    attach: \"material\",\n    color: color,\n    map: texture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ImagePlane;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js"],"names":["React","useRef","THREE","useLoader","ImagePlane","color","src","props","material","texture","TextureLoader"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,2BAAP;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CAEA;;AAEA,SAASC,UAAT,OAAwD;AAAA,wBAAlCC,KAAkC;AAAA,MAAlCA,KAAkC,2BAA1B,OAA0B;AAAA,MAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,MAATC,KAAS;;AACtD,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;AAEA,QAAMQ,OAAO,GAAGN,SAAS,CAACD,KAAK,CAACQ,aAAP,EAAsBJ,GAAtB,CAAzB;AAEA,sBACE,8CAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAqB,IAAA,MAAM,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAgB,IAAA,GAAG,EAAEC,QAArB;AAA+B,IAAA,MAAM,EAAC,UAAtC;AAAiD,IAAA,KAAK,EAAEH,KAAxD;AAA+D,IAAA,GAAG,EAAEI,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeL,UAAf","sourcesContent":["import React, { useRef } from 'react'\nimport * as THREE from 'three'\nimport './materials/ImageMaterial'\nimport { useLoader } from 'react-three-fiber'\n\n// A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane({ color = 'white', src, ...props }) {\n  const material = useRef()\n\n  const texture = useLoader(THREE.TextureLoader, src)\n\n  return (\n    <mesh {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={[1, 1, 32, 32]} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={texture} />\n    </mesh>\n  )\n}\n\nexport default ImagePlane\n"]},"metadata":{},"sourceType":"module"}