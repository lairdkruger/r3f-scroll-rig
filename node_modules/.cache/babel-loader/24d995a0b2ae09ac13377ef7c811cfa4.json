{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/shapes/Storm.js\";\nimport React, { useState, useRef } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport lerp from 'lerp';\nimport state from '../../store';\nimport '../materials/StormMaterial';\n\nfunction Storm(props) {\n  const smoke = useRef();\n  const wire = useRef();\n  const smokeMaterial = useRef();\n  const wireMaterial = useRef();\n  const lerpFactor = 0.025;\n\n  const _useThree = useThree(),\n        _useThree$viewport = _useThree.viewport,\n        width = _useThree$viewport.width,\n        height = _useThree$viewport.height;\n\n  const radius = Math.max(width / 4, height / 4);\n  const wireframeGeometry = new THREE.WireframeGeometry(new THREE.IcosahedronBufferGeometry(radius * 1.1, 3));\n  const wireframeMaterial = new THREE.LineBasicMaterial({\n    color: 'black'\n  });\n  let last = state.top.current;\n  let start = Date.now();\n  useFrame(() => {\n    const top = state.top;\n    const scrollSpeed = top.current - last;\n    smokeMaterial.current.time = 0.00025 * (Date.now() - start);\n    wireMaterial.current.time = 0.00025 * (Date.now() - start);\n    smokeMaterial.current.lowFreqAmp = lerp(smokeMaterial.current.lowFreqAmp, Math.abs(scrollSpeed) * radius / 50, lerpFactor);\n    smokeMaterial.current.highFreqAmp = lerp(smokeMaterial.current.highFreqAmp, Math.abs(scrollSpeed) * radius / 50, lerpFactor);\n    wireMaterial.current.lowFreqAmp = lerp(wireMaterial.current.lowFreqAmp, Math.abs(scrollSpeed) * radius / 50, lerpFactor);\n    wireMaterial.current.highFreqAmp = lerp(wireMaterial.current.highFreqAmp, Math.abs(scrollSpeed) * radius / 50, lerpFactor);\n    last = top.current;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: smoke,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"icosahedronBufferGeometry\", {\n    args: [radius, 5],\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"smokeMaterial\", {\n    ref: smokeMaterial,\n    attach: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: smoke,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"icosahedronBufferGeometry\", {\n    args: [radius * 1.1, 3],\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"smokeMaterial\", {\n    ref: smokeMaterial,\n    attach: \"material\",\n    wireframe: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"lineSegments\", {\n    ref: wire,\n    args: [wireframeGeometry, wireMaterial],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"smokeMaterial\", {\n    ref: wireMaterial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Storm;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/shapes/Storm.js"],"names":["React","useState","useRef","useFrame","useThree","THREE","lerp","state","Storm","props","smoke","wire","smokeMaterial","wireMaterial","lerpFactor","viewport","width","height","radius","Math","max","wireframeGeometry","WireframeGeometry","IcosahedronBufferGeometry","wireframeMaterial","LineBasicMaterial","color","last","top","current","start","Date","now","scrollSpeed","time","lowFreqAmp","abs","highFreqAmp"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { useFrame, useThree } from 'react-three-fiber'\nimport * as THREE from 'three'\nimport lerp from 'lerp'\nimport state from '../../store'\n\nimport '../materials/StormMaterial'\n\nfunction Storm(props) {\n  const smoke = useRef()\n  const wire = useRef()\n  const smokeMaterial = useRef()\n  const wireMaterial = useRef()\n\n  const lerpFactor = 0.025\n\n  const {\n    viewport: { width, height }\n  } = useThree()\n\n  const radius = Math.max(width / 4, height / 4)\n\n  const wireframeGeometry = new THREE.WireframeGeometry(new THREE.IcosahedronBufferGeometry(radius * 1.1, 3))\n  const wireframeMaterial = new THREE.LineBasicMaterial({ color: 'black' })\n\n  let last = state.top.current\n  let start = Date.now()\n\n  useFrame(() => {\n    const { top } = state\n    const scrollSpeed = top.current - last\n    smokeMaterial.current.time = 0.00025 * (Date.now() - start)\n    wireMaterial.current.time = 0.00025 * (Date.now() - start)\n\n    smokeMaterial.current.lowFreqAmp = lerp(smokeMaterial.current.lowFreqAmp, (Math.abs(scrollSpeed) * radius) / 50, lerpFactor)\n    smokeMaterial.current.highFreqAmp = lerp(smokeMaterial.current.highFreqAmp, (Math.abs(scrollSpeed) * radius) / 50, lerpFactor)\n\n    wireMaterial.current.lowFreqAmp = lerp(wireMaterial.current.lowFreqAmp, (Math.abs(scrollSpeed) * radius) / 50, lerpFactor)\n    wireMaterial.current.highFreqAmp = lerp(wireMaterial.current.highFreqAmp, (Math.abs(scrollSpeed) * radius) / 50, lerpFactor)\n\n    last = top.current\n  })\n\n  return (\n    <group>\n      <mesh ref={smoke}>\n        <icosahedronBufferGeometry args={[radius, 5]} attach=\"geometry\" />\n        <smokeMaterial ref={smokeMaterial} attach=\"material\" />\n      </mesh>\n\n      <mesh ref={smoke}>\n        <icosahedronBufferGeometry args={[radius * 1.1, 3]} attach=\"geometry\" />\n        <smokeMaterial ref={smokeMaterial} attach=\"material\" wireframe={true} />\n      </mesh>\n\n      <lineSegments ref={wire} args={[wireframeGeometry, wireMaterial]}>\n        <smokeMaterial ref={wireMaterial} />\n      </lineSegments>\n    </group>\n  )\n}\n\nexport default Storm\n"]},"metadata":{},"sourceType":"module"}