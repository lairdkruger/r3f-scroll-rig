{"ast":null,"code":"/**\n * @author alteredq / http://alteredqualia.com/\n */\nimport { DataTexture, FloatType, MathUtils, RGBFormat, ShaderMaterial, UniformsUtils } from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\n\nvar GlitchPass = function GlitchPass(dt_size) {\n  Pass.call(this);\n  if (DigitalGlitch === undefined) console.error(\"GlitchPass relies on DigitalGlitch\");\n  var shader = DigitalGlitch;\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  if (dt_size == undefined) dt_size = 64;\n  this.uniforms[\"tDisp\"].value = this.generateHeightmap(dt_size);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n  this.fsQuad = new Pass.FullScreenQuad(this.material);\n  this.goWild = false;\n  this.curF = 0;\n  this.generateTrigger();\n};\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random(); //default seeding\n\n    this.uniforms['byp'].value = 0;\n\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1;\n    }\n\n    this.curF++;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  },\n  generateTrigger: function generateTrigger() {\n    this.randX = MathUtils.randInt(120, 240);\n  },\n  generateHeightmap: function generateHeightmap(dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3);\n    var length = dt_size * dt_size;\n\n    for (var i = 0; i < length; i++) {\n      var val = MathUtils.randFloat(0, 1);\n      data_arr[i * 3 + 0] = val;\n      data_arr[i * 3 + 1] = val;\n      data_arr[i * 3 + 2] = val;\n    }\n\n    return new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType);\n  }\n});\nexport { GlitchPass };","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/node_modules/three/examples/jsm/postprocessing/GlitchPass.js"],"names":["DataTexture","FloatType","MathUtils","RGBFormat","ShaderMaterial","UniformsUtils","Pass","DigitalGlitch","GlitchPass","dt_size","call","undefined","console","error","shader","uniforms","clone","value","generateHeightmap","material","vertexShader","fragmentShader","fsQuad","FullScreenQuad","goWild","curF","generateTrigger","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","texture","Math","random","randX","randFloat","PI","renderToScreen","setRenderTarget","clear","randInt","data_arr","Float32Array","length","i","val"],"mappings":"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","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tDataTexture,\n\tFloatType,\n\tMathUtils,\n\tRGBFormat,\n\tShaderMaterial,\n\tUniformsUtils\n} from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\n\nvar GlitchPass = function ( dt_size ) {\n\n\tPass.call( this );\n\n\tif ( DigitalGlitch === undefined ) console.error( \"GlitchPass relies on DigitalGlitch\" );\n\n\tvar shader = DigitalGlitch;\n\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\tif ( dt_size == undefined ) dt_size = 64;\n\n\n\tthis.uniforms[ \"tDisp\" ].value = this.generateHeightmap( dt_size );\n\n\n\tthis.material = new ShaderMaterial( {\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\t} );\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n\tthis.goWild = false;\n\tthis.curF = 0;\n\tthis.generateTrigger();\n\n};\n\nGlitchPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: GlitchPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'seed' ].value = Math.random();//default seeding\n\t\tthis.uniforms[ 'byp' ].value = 0;\n\n\t\tif ( this.curF % this.randX == 0 || this.goWild == true ) {\n\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\n\t\t\tthis.uniforms[ 'angle' ].value = MathUtils.randFloat( - Math.PI, Math.PI );\n\t\t\tthis.uniforms[ 'seed_x' ].value = MathUtils.randFloat( - 1, 1 );\n\t\t\tthis.uniforms[ 'seed_y' ].value = MathUtils.randFloat( - 1, 1 );\n\t\t\tthis.uniforms[ 'distortion_x' ].value = MathUtils.randFloat( 0, 1 );\n\t\t\tthis.uniforms[ 'distortion_y' ].value = MathUtils.randFloat( 0, 1 );\n\t\t\tthis.curF = 0;\n\t\t\tthis.generateTrigger();\n\n\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\n\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\n\t\t\tthis.uniforms[ 'angle' ].value = MathUtils.randFloat( - Math.PI, Math.PI );\n\t\t\tthis.uniforms[ 'distortion_x' ].value = MathUtils.randFloat( 0, 1 );\n\t\t\tthis.uniforms[ 'distortion_y' ].value = MathUtils.randFloat( 0, 1 );\n\t\t\tthis.uniforms[ 'seed_x' ].value = MathUtils.randFloat( - 0.3, 0.3 );\n\t\t\tthis.uniforms[ 'seed_y' ].value = MathUtils.randFloat( - 0.3, 0.3 );\n\n\t\t} else if ( this.goWild == false ) {\n\n\t\t\tthis.uniforms[ 'byp' ].value = 1;\n\n\t\t}\n\n\t\tthis.curF ++;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t},\n\n\tgenerateTrigger: function () {\n\n\t\tthis.randX = MathUtils.randInt( 120, 240 );\n\n\t},\n\n\tgenerateHeightmap: function ( dt_size ) {\n\n\t\tvar data_arr = new Float32Array( dt_size * dt_size * 3 );\n\t\tvar length = dt_size * dt_size;\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar val = MathUtils.randFloat( 0, 1 );\n\t\t\tdata_arr[ i * 3 + 0 ] = val;\n\t\t\tdata_arr[ i * 3 + 1 ] = val;\n\t\t\tdata_arr[ i * 3 + 2 ] = val;\n\n\t\t}\n\n\t\treturn new DataTexture( data_arr, dt_size, dt_size, RGBFormat, FloatType );\n\n\t}\n\n} );\n\nexport { GlitchPass };\n"]},"metadata":{},"sourceType":"module"}