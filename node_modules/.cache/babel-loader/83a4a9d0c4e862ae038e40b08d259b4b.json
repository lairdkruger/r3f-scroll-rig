{"ast":null,"code":"import { useMemo, useEffect } from 'react';\nimport { useLoader, useThree, useFrame } from 'react-three-fiber';\nimport { EffectComposer, EffectPass, NoiseEffect, RenderPass } from 'postprocessing'; // Fix smaa loader signature\n// Will not be neccessary next version: https://github.com/vanruesc/postprocessing/commit/f05bb85fc9548458ee5e4a24026f308f0a8b72d4\n\nconst _load = SMAAImageLoader.prototype.load;\n\nSMAAImageLoader.prototype.load = function (_, set) {\n  return _load.bind(this)(set);\n};\n\nexport default function Effects() {\n  const _useThree = useThree(),\n        gl = _useThree.gl,\n        scene = _useThree.scene,\n        camera = _useThree.camera,\n        size = _useThree.size;\n\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl);\n    composer.addPass(new RenderPass(scene, camera));\n    const effectPass = new EffectPass(camera);\n    effectPass.renderToScreen = true;\n    composer.addPass(effectPass);\n    return composer;\n  }, []);\n  useEffect(() => void composer.setSize(size.width, size.height), [size]);\n  return useFrame((_, delta) => composer.render(delta), 1);\n}","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/postprocessing/Postprocessing.js"],"names":["useMemo","useEffect","useLoader","useThree","useFrame","EffectComposer","EffectPass","NoiseEffect","RenderPass","_load","SMAAImageLoader","prototype","load","_","set","bind","Effects","gl","scene","camera","size","composer","addPass","effectPass","renderToScreen","setSize","width","height","delta","render"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,mBAA9C;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,UAAlD,QAAoE,gBAApE,C,CAEA;AACA;;AACA,MAAMC,KAAK,GAAGC,eAAe,CAACC,SAAhB,CAA0BC,IAAxC;;AACAF,eAAe,CAACC,SAAhB,CAA0BC,IAA1B,GAAiC,UAAUC,CAAV,EAAaC,GAAb,EAAkB;AACjD,SAAOL,KAAK,CAACM,IAAN,CAAW,IAAX,EAAiBD,GAAjB,CAAP;AACD,CAFD;;AAIA,eAAe,SAASE,OAAT,GAAmB;AAAA,oBACIb,QAAQ,EADZ;AAAA,QACxBc,EADwB,aACxBA,EADwB;AAAA,QACpBC,KADoB,aACpBA,KADoB;AAAA,QACbC,MADa,aACbA,MADa;AAAA,QACLC,IADK,aACLA,IADK;;AAEhC,QAAMC,QAAQ,GAAGrB,OAAO,CAAC,MAAM;AAC7B,UAAMqB,QAAQ,GAAG,IAAIhB,cAAJ,CAAmBY,EAAnB,CAAjB;AACAI,IAAAA,QAAQ,CAACC,OAAT,CAAiB,IAAId,UAAJ,CAAeU,KAAf,EAAsBC,MAAtB,CAAjB;AAEA,UAAMI,UAAU,GAAG,IAAIjB,UAAJ,CAAea,MAAf,CAAnB;AACAI,IAAAA,UAAU,CAACC,cAAX,GAA4B,IAA5B;AACAH,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,UAAjB;AACA,WAAOF,QAAP;AACD,GARuB,EAQrB,EARqB,CAAxB;AASApB,EAAAA,SAAS,CAAC,MAAM,KAAKoB,QAAQ,CAACI,OAAT,CAAiBL,IAAI,CAACM,KAAtB,EAA6BN,IAAI,CAACO,MAAlC,CAAZ,EAAuD,CAACP,IAAD,CAAvD,CAAT;AACA,SAAOhB,QAAQ,CAAC,CAACS,CAAD,EAAIe,KAAJ,KAAcP,QAAQ,CAACQ,MAAT,CAAgBD,KAAhB,CAAf,EAAuC,CAAvC,CAAf;AACD","sourcesContent":["import { useMemo, useEffect } from 'react'\nimport { useLoader, useThree, useFrame } from 'react-three-fiber'\nimport { EffectComposer, EffectPass, NoiseEffect, RenderPass } from 'postprocessing'\n\n// Fix smaa loader signature\n// Will not be neccessary next version: https://github.com/vanruesc/postprocessing/commit/f05bb85fc9548458ee5e4a24026f308f0a8b72d4\nconst _load = SMAAImageLoader.prototype.load\nSMAAImageLoader.prototype.load = function (_, set) {\n  return _load.bind(this)(set)\n}\n\nexport default function Effects() {\n  const { gl, scene, camera, size } = useThree()\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl)\n    composer.addPass(new RenderPass(scene, camera))\n\n    const effectPass = new EffectPass(camera)\n    effectPass.renderToScreen = true\n    composer.addPass(effectPass)\n    return composer\n  }, [])\n  useEffect(() => void composer.setSize(size.width, size.height), [size])\n  return useFrame((_, delta) => composer.render(delta), 1)\n}\n"]},"metadata":{},"sourceType":"module"}