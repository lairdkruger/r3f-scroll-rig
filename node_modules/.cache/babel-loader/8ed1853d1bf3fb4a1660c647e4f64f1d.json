{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js\";\nimport React, { useRef } from 'react';\nimport * as THREE from 'three'; // A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane(_ref) {\n  let props = Object.assign({}, _ref);\n  const material = useRef();\n  let last = state.top.current;\n  useFrame(() => {\n    const _state = state,\n          pages = _state.pages,\n          top = _state.top;\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1);\n    material.current.shift = lerp(material.current.shift, (top.current - last) / 150, 0.1);\n    last = top.current;\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"customMaterial\", {\n    ref: material,\n    attach: \"material\",\n    color: color,\n    map: map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ImagePlane;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js"],"names":["React","useRef","THREE","ImagePlane","props","material","last","state","top","current","useFrame","pages","scale","lerp","offsetFactor","viewportHeight","shift","color","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AAEA,SAASC,UAAT,OAAkC;AAAA,MAATC,KAAS;AAChC,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACA,MAAIK,IAAI,GAAGC,KAAK,CAACC,GAAN,CAAUC,OAArB;AACAC,EAAAA,QAAQ,CAAC,MAAM;AAAA,mBACUH,KADV;AAAA,UACLI,KADK,UACLA,KADK;AAAA,UACEH,GADF,UACEA,GADF;AAEbH,IAAAA,QAAQ,CAACI,OAAT,CAAiBG,KAAjB,GAAyBC,IAAI,CAACR,QAAQ,CAACI,OAAT,CAAiBG,KAAlB,EAAyBE,YAAY,GAAGN,GAAG,CAACC,OAAJ,IAAe,CAACE,KAAK,GAAG,CAAT,IAAcI,cAA7B,CAAxC,EAAsF,GAAtF,CAA7B;AACAV,IAAAA,QAAQ,CAACI,OAAT,CAAiBO,KAAjB,GAAyBH,IAAI,CAACR,QAAQ,CAACI,OAAT,CAAiBO,KAAlB,EAAyB,CAACR,GAAG,CAACC,OAAJ,GAAcH,IAAf,IAAuB,GAAhD,EAAqD,GAArD,CAA7B;AACAA,IAAAA,IAAI,GAAGE,GAAG,CAACC,OAAX;AACD,GALO,CAAR;AAMA,sBACE,8CAAUL,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAqB,IAAA,MAAM,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAgB,IAAA,GAAG,EAAEC,QAArB;AAA+B,IAAA,MAAM,EAAC,UAAtC;AAAiD,IAAA,KAAK,EAAEY,KAAxD;AAA+D,IAAA,GAAG,EAAEC,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAef,UAAf","sourcesContent":["import React, { useRef } from 'react'\nimport * as THREE from 'three'\n\n// A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane({ ...props }) {\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, (top.current - last) / 150, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={[1, 1, 32, 32]} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} />\n    </mesh>\n  )\n}\n\nexport default ImagePlane\n"]},"metadata":{},"sourceType":"module"}