{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/shapes/Storm.js\";\nimport React, { useState, useRef } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport '../materials/StormMaterial';\n\nfunction Storm(props) {\n  const smoke = useRef();\n  const wire = useRef();\n  const smokeMaterial = useRef();\n\n  const _useThree = useThree(),\n        _useThree$viewport = _useThree.viewport,\n        width = _useThree$viewport.width,\n        height = _useThree$viewport.height;\n\n  const radius = Math.max(width / 4, height / 4);\n  const wireframeGeometry = new THREE.WireframeGeometry(new THREE.IcosahedronBufferGeometry(radius * 1.1, 3));\n  const wireframeMaterial = new THREE.LineBasicMaterial({\n    color: 'black'\n  });\n  useFrame(() => {\n    const _state = state,\n          top = _state.top;\n    const scrollSpeed = top.current - last;\n    material.current.scale = lerp(material.current.scale, Math.abs(scrollSpeed) / 150, 0.1);\n    material.current.shift = lerp(material.current.shift, scrollSpeed / 150, 0.1);\n    last = top.current;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: smoke,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"icosahedronBufferGeometry\", {\n    args: [radius, 5],\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"customMaterial\", {\n    ref: smokeMaterial,\n    attach: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"lineSegments\", {\n    args: [wireframeGeometry, wireframeMaterial],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Storm;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/shapes/Storm.js"],"names":["React","useState","useRef","useFrame","useThree","THREE","Storm","props","smoke","wire","smokeMaterial","viewport","width","height","radius","Math","max","wireframeGeometry","WireframeGeometry","IcosahedronBufferGeometry","wireframeMaterial","LineBasicMaterial","color","state","top","scrollSpeed","current","last","material","scale","lerp","abs","shift"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,4BAAP;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAMC,KAAK,GAAGN,MAAM,EAApB;AACA,QAAMO,IAAI,GAAGP,MAAM,EAAnB;AACA,QAAMQ,aAAa,GAAGR,MAAM,EAA5B;;AAHoB,oBAOhBE,QAAQ,EAPQ;AAAA,uCAMlBO,QANkB;AAAA,QAMNC,KANM,sBAMNA,KANM;AAAA,QAMCC,MAND,sBAMCA,MAND;;AASpB,QAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASJ,KAAK,GAAG,CAAjB,EAAoBC,MAAM,GAAG,CAA7B,CAAf;AAEA,QAAMI,iBAAiB,GAAG,IAAIZ,KAAK,CAACa,iBAAV,CAA4B,IAAIb,KAAK,CAACc,yBAAV,CAAoCL,MAAM,GAAG,GAA7C,EAAkD,CAAlD,CAA5B,CAA1B;AACA,QAAMM,iBAAiB,GAAG,IAAIf,KAAK,CAACgB,iBAAV,CAA4B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA5B,CAA1B;AAEAnB,EAAAA,QAAQ,CAAC,MAAM;AAAA,mBACGoB,KADH;AAAA,UACLC,GADK,UACLA,GADK;AAEb,UAAMC,WAAW,GAAGD,GAAG,CAACE,OAAJ,GAAcC,IAAlC;AACAC,IAAAA,QAAQ,CAACF,OAAT,CAAiBG,KAAjB,GAAyBC,IAAI,CAACF,QAAQ,CAACF,OAAT,CAAiBG,KAAlB,EAAyBd,IAAI,CAACgB,GAAL,CAASN,WAAT,IAAwB,GAAjD,EAAsD,GAAtD,CAA7B;AACAG,IAAAA,QAAQ,CAACF,OAAT,CAAiBM,KAAjB,GAAyBF,IAAI,CAACF,QAAQ,CAACF,OAAT,CAAiBM,KAAlB,EAAyBP,WAAW,GAAG,GAAvC,EAA4C,GAA5C,CAA7B;AACAE,IAAAA,IAAI,GAAGH,GAAG,CAACE,OAAX;AACD,GANO,CAAR;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,GAAG,EAAElB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAA2B,IAAA,IAAI,EAAE,CAACM,MAAD,EAAS,CAAT,CAAjC;AAA8C,IAAA,MAAM,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAgB,IAAA,GAAG,EAAEJ,aAArB;AAAoC,IAAA,MAAM,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAME;AAAc,IAAA,IAAI,EAAE,CAACO,iBAAD,EAAoBG,iBAApB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAed,KAAf","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { useFrame, useThree } from 'react-three-fiber'\nimport * as THREE from 'three'\n\nimport '../materials/StormMaterial'\n\nfunction Storm(props) {\n  const smoke = useRef()\n  const wire = useRef()\n  const smokeMaterial = useRef()\n\n  const {\n    viewport: { width, height }\n  } = useThree()\n\n  const radius = Math.max(width / 4, height / 4)\n\n  const wireframeGeometry = new THREE.WireframeGeometry(new THREE.IcosahedronBufferGeometry(radius * 1.1, 3))\n  const wireframeMaterial = new THREE.LineBasicMaterial({ color: 'black' })\n\n  useFrame(() => {\n    const { top } = state\n    const scrollSpeed = top.current - last\n    material.current.scale = lerp(material.current.scale, Math.abs(scrollSpeed) / 150, 0.1)\n    material.current.shift = lerp(material.current.shift, scrollSpeed / 150, 0.1)\n    last = top.current\n  })\n\n  return (\n    <group>\n      <mesh ref={smoke}>\n        <icosahedronBufferGeometry args={[radius, 5]} attach=\"geometry\" />\n        <customMaterial ref={smokeMaterial} attach=\"material\" />\n      </mesh>\n\n      <lineSegments args={[wireframeGeometry, wireframeMaterial]} />\n    </group>\n  )\n}\n\nexport default Storm\n"]},"metadata":{},"sourceType":"module"}