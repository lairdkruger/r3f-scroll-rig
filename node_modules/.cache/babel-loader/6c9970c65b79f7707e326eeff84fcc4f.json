{"ast":null,"code":"import _slicedToArray from \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/index.js\";\nimport { render } from 'react-dom';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Canvas, extend } from 'react-three-fiber';\nimport { Block } from './components/Blocks';\nimport HtmlContent from './components/HtmlContent';\nimport { Shapes } from './components/Shapes';\nimport Box from './components/shapes/Box';\nimport state from './store';\nimport './styles.css';\nimport FlatCamera from './components/camera/FlatCamera';\n\nfunction Plane(_ref) {\n  let _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'white' : _ref$color,\n      map = _ref.map,\n      props = _objectWithoutProperties(_ref, [\"color\", \"map\"]);\n\n  const textures = useLoader(TextureLoader, state.images);\n\n  const _textures$map = textures.map(texture => (texture.minFilter = LinearFilter, texture)),\n        _textures$map2 = _slicedToArray(_textures$map, 1),\n        img1 = _textures$map2[0];\n\n  const _useBlock = useBlock(),\n        viewportHeight = _useBlock.viewportHeight,\n        offsetFactor = _useBlock.offsetFactor;\n\n  const material = useRef();\n  let last = state.top.current;\n  useFrame(() => {\n    const pages = state.pages,\n          top = state.top;\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1);\n    material.current.shift = lerp(material.current.shift, (top.current - last) / 150, 0.1);\n    last = top.current;\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"customMaterial\", {\n    ref: material,\n    attach: \"material\",\n    color: color,\n    map: map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Content({\n  left,\n  children,\n  map\n}) {\n  const _useBlock2 = useBlock(),\n        contentMaxWidth = _useBlock2.contentMaxWidth,\n        canvasWidth = _useBlock2.canvasWidth,\n        margin = _useBlock2.margin;\n\n  const aspect = 1.75;\n  const alignRight = (canvasWidth - contentMaxWidth - margin) / 2;\n  return /*#__PURE__*/React.createElement(\"group\", {\n    position: [alignRight * (left ? -1 : 1), 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Plane, {\n    scale: [contentMaxWidth, contentMaxWidth / aspect, 1],\n    color: \"#bfe2ca\",\n    map: map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), children);\n}\n\nfunction App() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        events = _useState2[0],\n        setEvents = _useState2[1];\n\n  const domContent = useRef();\n  const scrollArea = useRef(); // Scroll an area by updating state.top.current\n\n  const onScroll = e => state.top.current = e.target.scrollTop;\n\n  useEffect(() => void onScroll({\n    target: scrollArea.current\n  }), []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    gl: {\n      alpha: true,\n      antialias: true\n    },\n    onCreated: ({\n      gl,\n      events\n    }) => {\n      gl.setClearColor('white'); // Export canvas events, we will put them onto the scroll area (hovers, clicks etc)\n\n      setEvents(events);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlatCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Block, {\n    factor: 1.5,\n    offset: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Shapes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HtmlContent, {\n    portal: domContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"r3f\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), \"scroll\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), \"rig.\")))), /*#__PURE__*/React.createElement(Block, {\n    factor: 1.5,\n    offset: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    scale: [200, 200, 200],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HtmlContent, {\n    portal: domContent,\n    className: \"section-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"first section\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"image-plane\",\n    src: \"/media/images/peppers.png\",\n    alt: \"peppers and spicy things\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Block, {\n    factor: 1.5,\n    offset: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    scale: [200, 200, 200],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HtmlContent, {\n    portal: domContent,\n    className: \"section-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"second section\"))), /*#__PURE__*/React.createElement(Block, {\n    factor: -2,\n    offset: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    scale: [400, 400, 400],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(HtmlContent, {\n    portal: domContent,\n    className: \"section-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"third section\")))), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"scrollArea\",\n    ref: scrollArea,\n    onScroll: onScroll\n  }, events, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'sticky',\n      top: 0\n    },\n    ref: domContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"\".concat(state.pages * 100, \"vh\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })));\n}\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 8\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/index.js"],"names":["render","React","useState","useEffect","useRef","Canvas","extend","Block","HtmlContent","Shapes","Box","state","FlatCamera","Plane","color","map","props","textures","useLoader","TextureLoader","images","texture","minFilter","LinearFilter","img1","useBlock","viewportHeight","offsetFactor","material","last","top","current","useFrame","pages","scale","lerp","shift","Content","left","children","contentMaxWidth","canvasWidth","margin","aspect","alignRight","App","events","setEvents","domContent","scrollArea","onScroll","e","target","scrollTop","alpha","antialias","gl","setClearColor","position","height","document","querySelector"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { Canvas, extend } from 'react-three-fiber'\n\nimport { Block } from './components/Blocks'\nimport HtmlContent from './components/HtmlContent'\n\nimport { Shapes } from './components/Shapes'\nimport Box from './components/shapes/Box'\nimport state from './store'\nimport './styles.css'\nimport FlatCamera from './components/camera/FlatCamera'\n\nfunction Plane({ color = 'white', map, ...props }) {\n  const textures = useLoader(TextureLoader, state.images)\n  const [img1] = textures.map((texture) => ((texture.minFilter = LinearFilter), texture))\n\n  const { viewportHeight, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, (top.current - last) / 150, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={[1, 1, 32, 32]} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} />\n    </mesh>\n  )\n}\n\nfunction Content({ left, children, map }) {\n  const { contentMaxWidth, canvasWidth, margin } = useBlock()\n  const aspect = 1.75\n  const alignRight = (canvasWidth - contentMaxWidth - margin) / 2\n  return (\n    <group position={[alignRight * (left ? -1 : 1), 0, 0]}>\n      <Plane scale={[contentMaxWidth, contentMaxWidth / aspect, 1]} color=\"#bfe2ca\" map={map} />\n      {children}\n    </group>\n  )\n}\n\nfunction App() {\n  const [events, setEvents] = useState()\n  const domContent = useRef()\n  const scrollArea = useRef()\n  // Scroll an area by updating state.top.current\n  const onScroll = (e) => (state.top.current = e.target.scrollTop)\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\n\n  return (\n    <>\n      <Canvas\n        colorManagement\n        gl={{ alpha: true, antialias: true }}\n        onCreated={({ gl, events }) => {\n          gl.setClearColor('white')\n          // Export canvas events, we will put them onto the scroll area (hovers, clicks etc)\n          setEvents(events)\n        }}>\n        <FlatCamera />\n\n        <Block factor={1.5} offset={0}>\n          <Shapes />\n          <HtmlContent portal={domContent}>\n            <div className=\"jumbo\">\n              <h1>\n                r3f\n                <br />\n                scroll\n                <br />\n                rig.\n              </h1>\n            </div>\n          </HtmlContent>\n        </Block>\n\n        <Block factor={1.5} offset={1}>\n          <Box scale={[200, 200, 200]} />\n          <HtmlContent portal={domContent} className=\"section-box\">\n            <h2>first section</h2>\n            <div className=\"image-box\">\n              <img className=\"image-plane\" src=\"/media/images/peppers.png\" alt=\"peppers and spicy things\" />\n            </div>\n          </HtmlContent>\n        </Block>\n\n        <Block factor={1.5} offset={2}>\n          <Box scale={[200, 200, 200]} />\n          <HtmlContent portal={domContent} className=\"section-box\">\n            <h2>second section</h2>\n          </HtmlContent>\n        </Block>\n\n        <Block factor={-2} offset={4}>\n          <Box scale={[400, 400, 400]} />\n          <HtmlContent portal={domContent} className=\"section-box\">\n            <h2>third section</h2>\n          </HtmlContent>\n        </Block>\n      </Canvas>\n\n      {/* container with events */}\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll} {...events}>\n        {/* content container containing all html elements */}\n        <div style={{ position: 'sticky', top: 0 }} ref={domContent} />\n        {/* sizer for the scroll area */}\n        <div style={{ height: `${state.pages * 100}vh` }} />\n      </div>\n    </>\n  )\n}\n\nrender(<App />, document.querySelector('#root'))\n"]},"metadata":{},"sourceType":"module"}