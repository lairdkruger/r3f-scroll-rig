{"ast":null,"code":"import _slicedToArray from \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/shapes/Box.js\";\nimport React, { useState } from 'react';\nimport { useFrame } from 'react-three-fiber';\n\nfunction Box(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hovered = _useState2[0],\n        set = _useState2[1];\n\n  const ref = useWobble(0.5, 'cos');\n  useFrame(() => ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z += 0.01);\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({\n    ref: ref\n  }, props, {\n    onPointerOver: () => set(true),\n    onPointerOut: () => set(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: hovered ? 'hotpink' : 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Box;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/shapes/Box.js"],"names":["React","useState","useFrame","Box","props","hovered","set","ref","useWobble","current","rotation","x","y","z"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,oBACKH,QAAQ,CAAC,KAAD,CADb;AAAA;AAAA,QACXI,OADW;AAAA,QACFC,GADE;;AAElB,QAAMC,GAAG,GAAGC,SAAS,CAAC,GAAD,EAAM,KAAN,CAArB;AACAN,EAAAA,QAAQ,CAAC,MAAOK,GAAG,CAACE,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,GAAyBJ,GAAG,CAACE,OAAJ,CAAYC,QAAZ,CAAqBE,CAArB,GAAyBL,GAAG,CAACE,OAAJ,CAAYC,QAAZ,CAAqBG,CAArB,IAA0B,IAApF,CAAR;AACA,sBACE;AAAM,IAAA,GAAG,EAAEN;AAAX,KAAoBH,KAApB;AAA2B,IAAA,aAAa,EAAE,MAAME,GAAG,CAAC,IAAD,CAAnD;AAA2D,IAAA,YAAY,EAAE,MAAMA,GAAG,CAAC,KAAD,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useFrame } from 'react-three-fiber'\n\nfunction Box(props) {\n  const [hovered, set] = useState(false)\n  const ref = useWobble(0.5, 'cos')\n  useFrame(() => (ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z += 0.01))\n  return (\n    <mesh ref={ref} {...props} onPointerOver={() => set(true)} onPointerOut={() => set(false)}>\n      <boxBufferGeometry attach=\"geometry\" />\n      <meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'white'} />\n    </mesh>\n  )\n}\n\nexport default Box\n"]},"metadata":{},"sourceType":"module"}