{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/postprocessing/Postprocessing.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { extend, Canvas, useFrame, useThree } from 'react-three-fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass';\nextend({\n  EffectComposer,\n  RenderPass,\n  GlitchPass\n});\n\nfunction Postprocessing() {\n  const _useThree = useThree(),\n        gl = _useThree.gl,\n        scene = _useThree.scene,\n        camera = _useThree.camera,\n        size = _useThree.size;\n\n  const composer = useRef();\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size]);\n  useFrame(() => composer.current.render(), 1);\n  return /*#__PURE__*/React.createElement(\"effectComposer\", {\n    ref: composer,\n    args: [gl],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"glitchPass\", {\n    attachArray: \"passes\",\n    renderToScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Postprocessing();","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/postprocessing/Postprocessing.js"],"names":["React","useRef","useEffect","extend","Canvas","useFrame","useThree","EffectComposer","RenderPass","GlitchPass","Postprocessing","gl","scene","camera","size","composer","current","setSize","width","height","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,QAAnC,QAAmD,mBAAnD;AACA,SAASC,cAAT,QAA+B,kDAA/B;AACA,SAASC,UAAT,QAA2B,8CAA3B;AACA,SAASC,UAAT,QAA2B,8CAA3B;AACAN,MAAM,CAAC;AAAEI,EAAAA,cAAF;AAAkBC,EAAAA,UAAlB;AAA8BC,EAAAA;AAA9B,CAAD,CAAN;;AAEA,SAASC,cAAT,GAA0B;AAAA,oBACYJ,QAAQ,EADpB;AAAA,QAChBK,EADgB,aAChBA,EADgB;AAAA,QACZC,KADY,aACZA,KADY;AAAA,QACLC,MADK,aACLA,MADK;AAAA,QACGC,IADH,aACGA,IADH;;AAExB,QAAMC,QAAQ,GAAGd,MAAM,EAAvB;AACAC,EAAAA,SAAS,CAAC,MAAM,KAAKa,QAAQ,CAACC,OAAT,CAAiBC,OAAjB,CAAyBH,IAAI,CAACI,KAA9B,EAAqCJ,IAAI,CAACK,MAA1C,CAAZ,EAA+D,CAACL,IAAD,CAA/D,CAAT;AACAT,EAAAA,QAAQ,CAAC,MAAMU,QAAQ,CAACC,OAAT,CAAiBI,MAAjB,EAAP,EAAkC,CAAlC,CAAR;AACA,sBACE;AAAgB,IAAA,GAAG,EAAEL,QAArB;AAA+B,IAAA,IAAI,EAAE,CAACJ,EAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAY,IAAA,WAAW,EAAC,QAAxB;AAAiC,IAAA,IAAI,EAAE,CAACC,KAAD,EAAQC,MAAR,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAY,IAAA,WAAW,EAAC,QAAxB;AAAiC,IAAA,cAAc,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeH,cAAc,EAA7B","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport { extend, Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass'\nextend({ EffectComposer, RenderPass, GlitchPass })\n\nfunction Postprocessing() {\n  const { gl, scene, camera, size } = useThree()\n  const composer = useRef()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 1)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" args={[scene, camera]} />\n      <glitchPass attachArray=\"passes\" renderToScreen />\n    </effectComposer>\n  )\n}\n\nexport default Postprocessing()\n"]},"metadata":{},"sourceType":"module"}