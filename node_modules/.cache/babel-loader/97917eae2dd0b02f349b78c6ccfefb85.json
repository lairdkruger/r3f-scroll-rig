{"ast":null,"code":"import { useMemo, useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { EffectComposer, EffectPass, NoiseEffect, RenderPass } from 'postprocessing';\nexport default function Postprocessing() {\n  const _useThree = useThree(),\n        gl = _useThree.gl,\n        scene = _useThree.scene,\n        camera = _useThree.camera,\n        size = _useThree.size;\n\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl);\n    composer.addPass(new RenderPass(scene, camera));\n    const noiseEffect = new NoiseEffect();\n    const effectPass = new EffectPass(camera, noiseEffect);\n    effectPass.renderToScreen = true;\n    composer.addPass(effectPass);\n    return composer;\n  }, []);\n  useEffect(() => void composer.setSize(size.width, size.height), [size]);\n  return useFrame((_, delta) => composer.render(delta), 1);\n}","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/postprocessing/Postprocessing.js"],"names":["useMemo","useEffect","useThree","useFrame","EffectComposer","EffectPass","NoiseEffect","RenderPass","Postprocessing","gl","scene","camera","size","composer","addPass","noiseEffect","effectPass","renderToScreen","setSize","width","height","_","delta","render"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,UAAlD,QAAoE,gBAApE;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA,oBACHN,QAAQ,EADL;AAAA,QAC/BO,EAD+B,aAC/BA,EAD+B;AAAA,QAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,QACpBC,MADoB,aACpBA,MADoB;AAAA,QACZC,IADY,aACZA,IADY;;AAEvC,QAAMC,QAAQ,GAAGb,OAAO,CAAC,MAAM;AAC7B,UAAMa,QAAQ,GAAG,IAAIT,cAAJ,CAAmBK,EAAnB,CAAjB;AACAI,IAAAA,QAAQ,CAACC,OAAT,CAAiB,IAAIP,UAAJ,CAAeG,KAAf,EAAsBC,MAAtB,CAAjB;AACA,UAAMI,WAAW,GAAG,IAAIT,WAAJ,EAApB;AACA,UAAMU,UAAU,GAAG,IAAIX,UAAJ,CAAeM,MAAf,EAAuBI,WAAvB,CAAnB;AACAC,IAAAA,UAAU,CAACC,cAAX,GAA4B,IAA5B;AACAJ,IAAAA,QAAQ,CAACC,OAAT,CAAiBE,UAAjB;AACA,WAAOH,QAAP;AACD,GARuB,EAQrB,EARqB,CAAxB;AASAZ,EAAAA,SAAS,CAAC,MAAM,KAAKY,QAAQ,CAACK,OAAT,CAAiBN,IAAI,CAACO,KAAtB,EAA6BP,IAAI,CAACQ,MAAlC,CAAZ,EAAuD,CAACR,IAAD,CAAvD,CAAT;AACA,SAAOT,QAAQ,CAAC,CAACkB,CAAD,EAAIC,KAAJ,KAAcT,QAAQ,CAACU,MAAT,CAAgBD,KAAhB,CAAf,EAAuC,CAAvC,CAAf;AACD","sourcesContent":["import { useMemo, useEffect } from 'react'\nimport { useThree, useFrame } from 'react-three-fiber'\nimport { EffectComposer, EffectPass, NoiseEffect, RenderPass } from 'postprocessing'\n\nexport default function Postprocessing() {\n  const { gl, scene, camera, size } = useThree()\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl)\n    composer.addPass(new RenderPass(scene, camera))\n    const noiseEffect = new NoiseEffect()\n    const effectPass = new EffectPass(camera, noiseEffect)\n    effectPass.renderToScreen = true\n    composer.addPass(effectPass)\n    return composer\n  }, [])\n  useEffect(() => void composer.setSize(size.width, size.height), [size])\n  return useFrame((_, delta) => composer.render(delta), 1)\n}\n"]},"metadata":{},"sourceType":"module"}