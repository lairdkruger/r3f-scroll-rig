{"ast":null,"code":"/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\nimport { AnimationClip, Bone, Box3, BufferAttribute, BufferGeometry, CanvasTexture, ClampToEdgeWrapping, Color, DirectionalLight, DoubleSide, FileLoader, FrontSide, Group, ImageBitmapLoader, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, Line, LineBasicMaterial, LineLoop, LineSegments, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, Loader, LoaderUtils, Material, MathUtils, Matrix4, Mesh, MeshBasicMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MirroredRepeatWrapping, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NumberKeyframeTrack, Object3D, OrthographicCamera, PerspectiveCamera, PointLight, Points, PointsMaterial, PropertyBinding, QuaternionKeyframeTrack, RGBAFormat, RGBFormat, RepeatWrapping, Skeleton, SkinnedMesh, Sphere, SpotLight, TangentSpaceNormalMap, TextureLoader, TriangleFanDrawMode, TriangleStripDrawMode, Vector2, Vector3, VectorKeyframeTrack, sRGBEncoding } from \"../../../build/three.module.js\";\n\nvar GLTFLoader = function () {\n  function GLTFLoader(manager) {\n    Loader.call(this, manager);\n    this.dracoLoader = null;\n    this.ddsLoader = null;\n    this.pluginCallbacks = [];\n    this.register(function (parser) {\n      return new GLTFMaterialsClearcoatExtension(parser);\n    });\n  }\n\n  GLTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: GLTFLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var resourcePath;\n\n      if (this.resourcePath !== '') {\n        resourcePath = this.resourcePath;\n      } else if (this.path !== '') {\n        resourcePath = this.path;\n      } else {\n        resourcePath = LoaderUtils.extractUrlBase(url);\n      } // Tells the LoadingManager to track an extra item, which resolves after\n      // the model is fully loaded. This means the count of items loaded will\n      // be incorrect, but ensures manager.onLoad() does not fire early.\n\n\n      scope.manager.itemStart(url);\n\n      var _onError = function _onError(e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      };\n\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      loader.setRequestHeader(this.requestHeader);\n\n      if (scope.crossOrigin === 'use-credentials') {\n        loader.setWithCredentials(true);\n      }\n\n      loader.load(url, function (data) {\n        try {\n          scope.parse(data, resourcePath, function (gltf) {\n            onLoad(gltf);\n            scope.manager.itemEnd(url);\n          }, _onError);\n        } catch (e) {\n          _onError(e);\n        }\n      }, onProgress, _onError);\n    },\n    setDRACOLoader: function setDRACOLoader(dracoLoader) {\n      this.dracoLoader = dracoLoader;\n      return this;\n    },\n    setDDSLoader: function setDDSLoader(ddsLoader) {\n      this.ddsLoader = ddsLoader;\n      return this;\n    },\n    register: function register(callback) {\n      if (this.pluginCallbacks.indexOf(callback) === -1) {\n        this.pluginCallbacks.push(callback);\n      }\n\n      return this;\n    },\n    unregister: function unregister(callback) {\n      if (this.pluginCallbacks.indexOf(callback) !== -1) {\n        this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(callback), 1);\n      }\n\n      return this;\n    },\n    parse: function parse(data, path, onLoad, onError) {\n      var content;\n      var extensions = {};\n      var plugins = {};\n\n      if (typeof data === 'string') {\n        content = data;\n      } else {\n        var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n        if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n          try {\n            extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n          } catch (error) {\n            if (onError) onError(error);\n            return;\n          }\n\n          content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n        } else {\n          content = LoaderUtils.decodeText(new Uint8Array(data));\n        }\n      }\n\n      var json = JSON.parse(content);\n\n      if (json.asset === undefined || json.asset.version[0] < 2) {\n        if (onError) onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n        return;\n      }\n\n      var parser = new GLTFParser(json, {\n        path: path || this.resourcePath || '',\n        crossOrigin: this.crossOrigin,\n        manager: this.manager\n      });\n      parser.fileLoader.setRequestHeader(this.requestHeader);\n\n      for (var i = 0; i < this.pluginCallbacks.length; i++) {\n        var plugin = this.pluginCallbacks[i](parser);\n        plugins[plugin.name] = plugin; // Workaround to avoid determining as unknown extension\n        // in addUnknownExtensionsToUserData().\n        // Remove this workaround if we move all the existing\n        // extension handlers to plugin system\n\n        extensions[plugin.name] = true;\n      }\n\n      if (json.extensionsUsed) {\n        for (var i = 0; i < json.extensionsUsed.length; ++i) {\n          var extensionName = json.extensionsUsed[i];\n          var extensionsRequired = json.extensionsRequired || [];\n\n          switch (extensionName) {\n            case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n              extensions[extensionName] = new GLTFLightsExtension(json);\n              break;\n\n            case EXTENSIONS.KHR_MATERIALS_UNLIT:\n              extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n              break;\n\n            case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n              extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n              break;\n\n            case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n              extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n              break;\n\n            case EXTENSIONS.MSFT_TEXTURE_DDS:\n              extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n              break;\n\n            case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n              extensions[extensionName] = new GLTFTextureTransformExtension();\n              break;\n\n            case EXTENSIONS.KHR_MESH_QUANTIZATION:\n              extensions[extensionName] = new GLTFMeshQuantizationExtension();\n              break;\n\n            default:\n              if (extensionsRequired.indexOf(extensionName) >= 0 && plugins[extensionName] === undefined) {\n                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n              }\n\n          }\n        }\n      }\n\n      parser.setExtensions(extensions);\n      parser.setPlugins(plugins);\n      parser.parse(onLoad, onError);\n    }\n  });\n  /* GLTFREGISTRY */\n\n  function GLTFRegistry() {\n    var objects = {};\n    return {\n      get: function get(key) {\n        return objects[key];\n      },\n      add: function add(key, object) {\n        objects[key] = object;\n      },\n      remove: function remove(key) {\n        delete objects[key];\n      },\n      removeAll: function removeAll() {\n        objects = {};\n      }\n    };\n  }\n  /*********************************/\n\n  /********** EXTENSIONS ***********/\n\n  /*********************************/\n\n\n  var EXTENSIONS = {\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\n    KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n    KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n    KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n    KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n    KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n    KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n    MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n  };\n  /**\n   * DDS Texture Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n   *\n   */\n\n  function GLTFTextureDDSExtension(ddsLoader) {\n    if (!ddsLoader) {\n      throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader');\n    }\n\n    this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n    this.ddsLoader = ddsLoader;\n  }\n  /**\n   * Punctual Lights Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n   */\n\n\n  function GLTFLightsExtension(json) {\n    this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n    var extension = json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] || {};\n    this.lightDefs = extension.lights || [];\n  }\n\n  GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n    var lightDef = this.lightDefs[lightIndex];\n    var lightNode;\n    var color = new Color(0xffffff);\n    if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n    var range = lightDef.range !== undefined ? lightDef.range : 0;\n\n    switch (lightDef.type) {\n      case 'directional':\n        lightNode = new DirectionalLight(color);\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n\n      case 'point':\n        lightNode = new PointLight(color);\n        lightNode.distance = range;\n        break;\n\n      case 'spot':\n        lightNode = new SpotLight(color);\n        lightNode.distance = range; // Handle spotlight properties.\n\n        lightDef.spot = lightDef.spot || {};\n        lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n        lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n        lightNode.angle = lightDef.spot.outerConeAngle;\n        lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n\n      default:\n        throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n    } // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n    // here, because node-level parsing will only override position if explicitly specified.\n\n\n    lightNode.position.set(0, 0, 0);\n    lightNode.decay = 2;\n    if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n    lightNode.name = lightDef.name || 'light_' + lightIndex;\n    return Promise.resolve(lightNode);\n  };\n  /**\n   * Unlit Materials Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n   */\n\n\n  function GLTFMaterialsUnlitExtension() {\n    this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n  }\n\n  GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n    return MeshBasicMaterial;\n  };\n\n  GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n    var pending = [];\n    materialParams.color = new Color(1.0, 1.0, 1.0);\n    materialParams.opacity = 1.0;\n    var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n    if (metallicRoughness) {\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n    }\n\n    return Promise.all(pending);\n  };\n  /**\n   * Clearcoat Materials Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n   */\n\n\n  function GLTFMaterialsClearcoatExtension(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n  }\n\n  GLTFMaterialsClearcoatExtension.prototype.getMaterialType = function ()\n  /* materialIndex */\n  {\n    return MeshPhysicalMaterial;\n  };\n\n  GLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function (materialIndex, materialParams) {\n    var parser = this.parser;\n    var materialDef = parser.json.materials[materialIndex];\n\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n\n    var pending = [];\n    var extension = materialDef.extensions[this.name];\n\n    if (extension.clearcoatFactor !== undefined) {\n      materialParams.clearcoat = extension.clearcoatFactor;\n    }\n\n    if (extension.clearcoatTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n    }\n\n    if (extension.clearcoatRoughnessFactor !== undefined) {\n      materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n    }\n\n    if (extension.clearcoatRoughnessTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture));\n    }\n\n    if (extension.clearcoatNormalTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n\n      if (extension.clearcoatNormalTexture.scale !== undefined) {\n        var scale = extension.clearcoatNormalTexture.scale;\n        materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n      }\n    }\n\n    return Promise.all(pending);\n  };\n  /* BINARY EXTENSION */\n\n\n  var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n  var BINARY_EXTENSION_HEADER_LENGTH = 12;\n  var BINARY_EXTENSION_CHUNK_TYPES = {\n    JSON: 0x4E4F534A,\n    BIN: 0x004E4942\n  };\n\n  function GLTFBinaryExtension(data) {\n    this.name = EXTENSIONS.KHR_BINARY_GLTF;\n    this.content = null;\n    this.body = null;\n    var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n    this.header = {\n      magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n      version: headerView.getUint32(4, true),\n      length: headerView.getUint32(8, true)\n    };\n\n    if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n      throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n    } else if (this.header.version < 2.0) {\n      throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n    }\n\n    var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n    var chunkIndex = 0;\n\n    while (chunkIndex < chunkView.byteLength) {\n      var chunkLength = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n      var chunkType = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n\n      if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n        var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n        this.content = LoaderUtils.decodeText(contentArray);\n      } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n        var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n        this.body = data.slice(byteOffset, byteOffset + chunkLength);\n      } // Clients must ignore chunks with unknown types.\n\n\n      chunkIndex += chunkLength;\n    }\n\n    if (this.content === null) {\n      throw new Error('THREE.GLTFLoader: JSON content not found.');\n    }\n  }\n  /**\n   * DRACO Mesh Compression Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n   */\n\n\n  function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n    if (!dracoLoader) {\n      throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n    }\n\n    this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n    this.json = json;\n    this.dracoLoader = dracoLoader;\n    this.dracoLoader.preload();\n  }\n\n  GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n    var json = this.json;\n    var dracoLoader = this.dracoLoader;\n    var bufferViewIndex = primitive.extensions[this.name].bufferView;\n    var gltfAttributeMap = primitive.extensions[this.name].attributes;\n    var threeAttributeMap = {};\n    var attributeNormalizedMap = {};\n    var attributeTypeMap = {};\n\n    for (var attributeName in gltfAttributeMap) {\n      var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n      threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n    }\n\n    for (attributeName in primitive.attributes) {\n      var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n\n      if (gltfAttributeMap[attributeName] !== undefined) {\n        var accessorDef = json.accessors[primitive.attributes[attributeName]];\n        var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n        attributeTypeMap[threeAttributeName] = componentType;\n        attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n      }\n    }\n\n    return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n      return new Promise(function (resolve) {\n        dracoLoader.decodeDracoFile(bufferView, function (geometry) {\n          for (var attributeName in geometry.attributes) {\n            var attribute = geometry.attributes[attributeName];\n            var normalized = attributeNormalizedMap[attributeName];\n            if (normalized !== undefined) attribute.normalized = normalized;\n          }\n\n          resolve(geometry);\n        }, threeAttributeMap, attributeTypeMap);\n      });\n    });\n  };\n  /**\n   * Texture Transform Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n   */\n\n\n  function GLTFTextureTransformExtension() {\n    this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n  }\n\n  GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n    texture = texture.clone();\n\n    if (transform.offset !== undefined) {\n      texture.offset.fromArray(transform.offset);\n    }\n\n    if (transform.rotation !== undefined) {\n      texture.rotation = transform.rotation;\n    }\n\n    if (transform.scale !== undefined) {\n      texture.repeat.fromArray(transform.scale);\n    }\n\n    if (transform.texCoord !== undefined) {\n      console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n    }\n\n    texture.needsUpdate = true;\n    return texture;\n  };\n  /**\n   * Specular-Glossiness Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n   */\n\n  /**\n   * A sub class of StandardMaterial with some of the functionality\n   * changed via the `onBeforeCompile` callback\n   * @pailhead\n   */\n\n\n  function GLTFMeshStandardSGMaterial(params) {\n    MeshStandardMaterial.call(this);\n    this.isGLTFSpecularGlossinessMaterial = true; //various chunks that need replacing\n\n    var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join('\\n');\n    var glossinessMapParsFragmentChunk = ['#ifdef USE_GLOSSINESSMAP', '\tuniform sampler2D glossinessMap;', '#endif'].join('\\n');\n    var specularMapFragmentChunk = ['vec3 specularFactor = specular;', '#ifdef USE_SPECULARMAP', '\tvec4 texelSpecular = texture2D( specularMap, vUv );', '\ttexelSpecular = sRGBToLinear( texelSpecular );', '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tspecularFactor *= texelSpecular.rgb;', '#endif'].join('\\n');\n    var glossinessMapFragmentChunk = ['float glossinessFactor = glossiness;', '#ifdef USE_GLOSSINESSMAP', '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );', '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tglossinessFactor *= texelGlossiness.a;', '#endif'].join('\\n');\n    var lightPhysicalFragmentChunk = ['PhysicalMaterial material;', 'material.diffuseColor = diffuseColor.rgb;', 'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );', 'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );', 'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.', 'material.specularRoughness += geometryRoughness;', 'material.specularRoughness = min( material.specularRoughness, 1.0 );', 'material.specularColor = specularFactor.rgb;'].join('\\n');\n    var uniforms = {\n      specular: {\n        value: new Color().setHex(0xffffff)\n      },\n      glossiness: {\n        value: 1\n      },\n      specularMap: {\n        value: null\n      },\n      glossinessMap: {\n        value: null\n      }\n    };\n    this._extraUniforms = uniforms; // please see #14031 or #13198 for an alternate approach\n\n    this.onBeforeCompile = function (shader) {\n      for (var uniformName in uniforms) {\n        shader.uniforms[uniformName] = uniforms[uniformName];\n      }\n\n      shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n      shader.fragmentShader = shader.fragmentShader.replace('uniform float metalness;', 'uniform float glossiness;');\n      shader.fragmentShader = shader.fragmentShader.replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <roughnessmap_fragment>', specularMapFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\n    };\n    /*eslint-disable*/\n\n\n    Object.defineProperties(this, {\n      specular: {\n        get: function get() {\n          return uniforms.specular.value;\n        },\n        set: function set(v) {\n          uniforms.specular.value = v;\n        }\n      },\n      specularMap: {\n        get: function get() {\n          return uniforms.specularMap.value;\n        },\n        set: function set(v) {\n          uniforms.specularMap.value = v;\n        }\n      },\n      glossiness: {\n        get: function get() {\n          return uniforms.glossiness.value;\n        },\n        set: function set(v) {\n          uniforms.glossiness.value = v;\n        }\n      },\n      glossinessMap: {\n        get: function get() {\n          return uniforms.glossinessMap.value;\n        },\n        set: function set(v) {\n          uniforms.glossinessMap.value = v; //how about something like this - @pailhead\n\n          if (v) {\n            this.defines.USE_GLOSSINESSMAP = ''; // set USE_ROUGHNESSMAP to enable vUv\n\n            this.defines.USE_ROUGHNESSMAP = '';\n          } else {\n            delete this.defines.USE_ROUGHNESSMAP;\n            delete this.defines.USE_GLOSSINESSMAP;\n          }\n        }\n      }\n    });\n    /*eslint-enable*/\n\n    delete this.metalness;\n    delete this.roughness;\n    delete this.metalnessMap;\n    delete this.roughnessMap;\n    this.setValues(params);\n  }\n\n  GLTFMeshStandardSGMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n  GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n  GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n    MeshStandardMaterial.prototype.copy.call(this, source);\n    this.specularMap = source.specularMap;\n    this.specular.copy(source.specular);\n    this.glossinessMap = source.glossinessMap;\n    this.glossiness = source.glossiness;\n    delete this.metalness;\n    delete this.roughness;\n    delete this.metalnessMap;\n    delete this.roughnessMap;\n    return this;\n  };\n\n  function GLTFMaterialsPbrSpecularGlossinessExtension() {\n    return {\n      name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n      specularGlossinessParams: ['color', 'map', 'lightMap', 'lightMapIntensity', 'aoMap', 'aoMapIntensity', 'emissive', 'emissiveIntensity', 'emissiveMap', 'bumpMap', 'bumpScale', 'normalMap', 'normalMapType', 'displacementMap', 'displacementScale', 'displacementBias', 'specularMap', 'specular', 'glossinessMap', 'glossiness', 'alphaMap', 'envMap', 'envMapIntensity', 'refractionRatio'],\n      getMaterialType: function getMaterialType() {\n        return GLTFMeshStandardSGMaterial;\n      },\n      extendParams: function extendParams(materialParams, materialDef, parser) {\n        var pbrSpecularGlossiness = materialDef.extensions[this.name];\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n        var pending = [];\n\n        if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n          var array = pbrSpecularGlossiness.diffuseFactor;\n          materialParams.color.fromArray(array);\n          materialParams.opacity = array[3];\n        }\n\n        if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n          pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n        }\n\n        materialParams.emissive = new Color(0.0, 0.0, 0.0);\n        materialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n        materialParams.specular = new Color(1.0, 1.0, 1.0);\n\n        if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n          materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n        }\n\n        if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n          var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n          pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n          pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n        }\n\n        return Promise.all(pending);\n      },\n      createMaterial: function createMaterial(materialParams) {\n        var material = new GLTFMeshStandardSGMaterial(materialParams);\n        material.fog = true;\n        material.color = materialParams.color;\n        material.map = materialParams.map === undefined ? null : materialParams.map;\n        material.lightMap = null;\n        material.lightMapIntensity = 1.0;\n        material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n        material.aoMapIntensity = 1.0;\n        material.emissive = materialParams.emissive;\n        material.emissiveIntensity = 1.0;\n        material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n        material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n        material.bumpScale = 1;\n        material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n        material.normalMapType = TangentSpaceNormalMap;\n        if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n        material.displacementMap = null;\n        material.displacementScale = 1;\n        material.displacementBias = 0;\n        material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n        material.specular = materialParams.specular;\n        material.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n        material.glossiness = materialParams.glossiness;\n        material.alphaMap = null;\n        material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n        material.envMapIntensity = 1.0;\n        material.refractionRatio = 0.98;\n        return material;\n      }\n    };\n  }\n  /**\n   * Mesh Quantization Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n   */\n\n\n  function GLTFMeshQuantizationExtension() {\n    this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n  }\n  /*********************************/\n\n  /********** INTERPOLATION ********/\n\n  /*********************************/\n  // Spline Interpolation\n  // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\n\n  function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  GLTFCubicSplineInterpolant.prototype = Object.create(Interpolant.prototype);\n  GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n  GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n    // Copies a sample value to the result buffer. See description of glTF\n    // CUBICSPLINE values layout in interpolate_() function below.\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        valueSize = this.valueSize,\n        offset = index * valueSize * 3 + valueSize;\n\n    for (var i = 0; i !== valueSize; i++) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  };\n\n  GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n  GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n  GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n    var result = this.resultBuffer;\n    var values = this.sampleValues;\n    var stride = this.valueSize;\n    var stride2 = stride * 2;\n    var stride3 = stride * 3;\n    var td = t1 - t0;\n    var p = (t - t0) / td;\n    var pp = p * p;\n    var ppp = pp * p;\n    var offset1 = i1 * stride3;\n    var offset0 = offset1 - stride3;\n    var s2 = -2 * ppp + 3 * pp;\n    var s3 = ppp - pp;\n    var s0 = 1 - s2;\n    var s1 = s3 - pp + p; // Layout of keyframe output values for CUBICSPLINE animations:\n    //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\n    for (var i = 0; i !== stride; i++) {\n      var p0 = values[offset0 + i + stride]; // splineVertex_k\n\n      var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n\n      var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n\n      var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n      result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n    }\n\n    return result;\n  };\n  /*********************************/\n\n  /********** INTERNALS ************/\n\n  /*********************************/\n\n  /* CONSTANTS */\n\n\n  var WEBGL_CONSTANTS = {\n    FLOAT: 5126,\n    //FLOAT_MAT2: 35674,\n    FLOAT_MAT3: 35675,\n    FLOAT_MAT4: 35676,\n    FLOAT_VEC2: 35664,\n    FLOAT_VEC3: 35665,\n    FLOAT_VEC4: 35666,\n    LINEAR: 9729,\n    REPEAT: 10497,\n    SAMPLER_2D: 35678,\n    POINTS: 0,\n    LINES: 1,\n    LINE_LOOP: 2,\n    LINE_STRIP: 3,\n    TRIANGLES: 4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN: 6,\n    UNSIGNED_BYTE: 5121,\n    UNSIGNED_SHORT: 5123\n  };\n  var WEBGL_COMPONENT_TYPES = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n  };\n  var WEBGL_FILTERS = {\n    9728: NearestFilter,\n    9729: LinearFilter,\n    9984: NearestMipmapNearestFilter,\n    9985: LinearMipmapNearestFilter,\n    9986: NearestMipmapLinearFilter,\n    9987: LinearMipmapLinearFilter\n  };\n  var WEBGL_WRAPPINGS = {\n    33071: ClampToEdgeWrapping,\n    33648: MirroredRepeatWrapping,\n    10497: RepeatWrapping\n  };\n  var WEBGL_TYPE_SIZES = {\n    'SCALAR': 1,\n    'VEC2': 2,\n    'VEC3': 3,\n    'VEC4': 4,\n    'MAT2': 4,\n    'MAT3': 9,\n    'MAT4': 16\n  };\n  var ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex'\n  };\n  var PATH_PROPERTIES = {\n    scale: 'scale',\n    translation: 'position',\n    rotation: 'quaternion',\n    weights: 'morphTargetInfluences'\n  };\n  var INTERPOLATION = {\n    CUBICSPLINE: undefined,\n    // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n    // keyframe track will be initialized with a default interpolation type, then modified.\n    LINEAR: InterpolateLinear,\n    STEP: InterpolateDiscrete\n  };\n  var ALPHA_MODES = {\n    OPAQUE: 'OPAQUE',\n    MASK: 'MASK',\n    BLEND: 'BLEND'\n  };\n  var MIME_TYPE_FORMATS = {\n    'image/png': RGBAFormat,\n    'image/jpeg': RGBFormat\n  };\n  /* UTILITY FUNCTIONS */\n\n  function resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return ''; // Host Relative URL\n\n    if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n      path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n    } // Absolute URL http://,https://,//\n\n\n    if (/^(https?:)?\\/\\//i.test(url)) return url; // Data URI\n\n    if (/^data:.*,.*$/i.test(url)) return url; // Blob URL\n\n    if (/^blob:.*$/i.test(url)) return url; // Relative URL\n\n    return path + url;\n  }\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n   */\n\n\n  function createDefaultMaterial(cache) {\n    if (cache['DefaultMaterial'] === undefined) {\n      cache['DefaultMaterial'] = new MeshStandardMaterial({\n        color: 0xFFFFFF,\n        emissive: 0x000000,\n        metalness: 1,\n        roughness: 1,\n        transparent: false,\n        depthTest: true,\n        side: FrontSide\n      });\n    }\n\n    return cache['DefaultMaterial'];\n  }\n\n  function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n    // Add unknown glTF extensions to an object's userData.\n    for (var name in objectDef.extensions) {\n      if (knownExtensions[name] === undefined) {\n        object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n        object.userData.gltfExtensions[name] = objectDef.extensions[name];\n      }\n    }\n  }\n  /**\n   * @param {Object3D|Material|BufferGeometry} object\n   * @param {GLTF.definition} gltfDef\n   */\n\n\n  function assignExtrasToUserData(object, gltfDef) {\n    if (gltfDef.extras !== undefined) {\n      if (typeof gltfDef.extras === 'object') {\n        Object.assign(object.userData, gltfDef.extras);\n      } else {\n        console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n      }\n    }\n  }\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n   *\n   * @param {BufferGeometry} geometry\n   * @param {Array<GLTF.Target>} targets\n   * @param {GLTFParser} parser\n   * @return {Promise<BufferGeometry>}\n   */\n\n\n  function addMorphTargets(geometry, targets, parser) {\n    var hasMorphPosition = false;\n    var hasMorphNormal = false;\n\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n      if (target.POSITION !== undefined) hasMorphPosition = true;\n      if (target.NORMAL !== undefined) hasMorphNormal = true;\n      if (hasMorphPosition && hasMorphNormal) break;\n    }\n\n    if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n    var pendingPositionAccessors = [];\n    var pendingNormalAccessors = [];\n\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n\n      if (hasMorphPosition) {\n        var pendingAccessor = target.POSITION !== undefined ? parser.getDependency('accessor', target.POSITION) : geometry.attributes.position;\n        pendingPositionAccessors.push(pendingAccessor);\n      }\n\n      if (hasMorphNormal) {\n        var pendingAccessor = target.NORMAL !== undefined ? parser.getDependency('accessor', target.NORMAL) : geometry.attributes.normal;\n        pendingNormalAccessors.push(pendingAccessor);\n      }\n    }\n\n    return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (accessors) {\n      var morphPositions = accessors[0];\n      var morphNormals = accessors[1];\n      if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n      if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = true;\n      return geometry;\n    });\n  }\n  /**\n   * @param {Mesh} mesh\n   * @param {GLTF.Mesh} meshDef\n   */\n\n\n  function updateMorphTargets(mesh, meshDef) {\n    mesh.updateMorphTargets();\n\n    if (meshDef.weights !== undefined) {\n      for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n        mesh.morphTargetInfluences[i] = meshDef.weights[i];\n      }\n    } // .extras has user-defined data, so check that .extras.targetNames is an array.\n\n\n    if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n      var targetNames = meshDef.extras.targetNames;\n\n      if (mesh.morphTargetInfluences.length === targetNames.length) {\n        mesh.morphTargetDictionary = {};\n\n        for (var i = 0, il = targetNames.length; i < il; i++) {\n          mesh.morphTargetDictionary[targetNames[i]] = i;\n        }\n      } else {\n        console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n      }\n    }\n  }\n\n  function createPrimitiveKey(primitiveDef) {\n    var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n    var geometryKey;\n\n    if (dracoExtension) {\n      geometryKey = 'draco:' + dracoExtension.bufferView + ':' + dracoExtension.indices + ':' + createAttributesKey(dracoExtension.attributes);\n    } else {\n      geometryKey = primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n    }\n\n    return geometryKey;\n  }\n\n  function createAttributesKey(attributes) {\n    var attributesKey = '';\n    var keys = Object.keys(attributes).sort();\n\n    for (var i = 0, il = keys.length; i < il; i++) {\n      attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n    }\n\n    return attributesKey;\n  }\n  /* GLTF PARSER */\n\n\n  function GLTFParser(json, options) {\n    this.json = json || {};\n    this.extensions = {};\n    this.plugins = {};\n    this.options = options || {}; // loader object cache\n\n    this.cache = new GLTFRegistry(); // associations between Three.js objects and glTF elements\n\n    this.associations = new Map(); // BufferGeometry caching\n\n    this.primitiveCache = {}; // Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n    // expensive work of uploading a texture to the GPU off the main thread.\n\n    if (typeof createImageBitmap !== 'undefined' && /Firefox/.test(navigator.userAgent) === false) {\n      this.textureLoader = new ImageBitmapLoader(this.options.manager);\n    } else {\n      this.textureLoader = new TextureLoader(this.options.manager);\n    }\n\n    this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n    this.fileLoader = new FileLoader(this.options.manager);\n    this.fileLoader.setResponseType('arraybuffer');\n\n    if (this.options.crossOrigin === 'use-credentials') {\n      this.fileLoader.setWithCredentials(true);\n    }\n  }\n\n  GLTFParser.prototype.setExtensions = function (extensions) {\n    this.extensions = extensions;\n  };\n\n  GLTFParser.prototype.setPlugins = function (plugins) {\n    this.plugins = plugins;\n  };\n\n  GLTFParser.prototype.parse = function (onLoad, onError) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions; // Clear the loader cache\n\n    this.cache.removeAll(); // Mark the special nodes/meshes in json for efficient parse\n\n    this.markDefs();\n    Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')]).then(function (dependencies) {\n      var result = {\n        scene: dependencies[0][json.scene || 0],\n        scenes: dependencies[0],\n        animations: dependencies[1],\n        cameras: dependencies[2],\n        asset: json.asset,\n        parser: parser,\n        userData: {}\n      };\n      addUnknownExtensionsToUserData(extensions, result, json);\n      assignExtrasToUserData(result, json);\n      onLoad(result);\n    }).catch(onError);\n  };\n  /**\n   * Marks the special nodes/meshes in json for efficient parse.\n   */\n\n\n  GLTFParser.prototype.markDefs = function () {\n    var nodeDefs = this.json.nodes || [];\n    var skinDefs = this.json.skins || [];\n    var meshDefs = this.json.meshes || [];\n    var meshReferences = {};\n    var meshUses = {}; // Nothing in the node definition indicates whether it is a Bone or an\n    // Object3D. Use the skins' joint references to mark bones.\n\n    for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n      var joints = skinDefs[skinIndex].joints;\n\n      for (var i = 0, il = joints.length; i < il; i++) {\n        nodeDefs[joints[i]].isBone = true;\n      }\n    } // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n    // avoid having more than one Mesh with the same name, count\n    // references and rename instances below.\n    //\n    // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\n\n    for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n      var nodeDef = nodeDefs[nodeIndex];\n\n      if (nodeDef.mesh !== undefined) {\n        if (meshReferences[nodeDef.mesh] === undefined) {\n          meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n        }\n\n        meshReferences[nodeDef.mesh]++; // Nothing in the mesh definition indicates whether it is\n        // a SkinnedMesh or Mesh. Use the node's mesh reference\n        // to mark SkinnedMesh if node has skin.\n\n        if (nodeDef.skin !== undefined) {\n          meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n        }\n      }\n    }\n\n    this.json.meshReferences = meshReferences;\n    this.json.meshUses = meshUses;\n  };\n\n  GLTFParser.prototype._invokeOne = function (func) {\n    var extensions = Object.values(this.plugins);\n    extensions.push(this);\n\n    for (var i = 0; i < extensions.length; i++) {\n      var result = func(extensions[i]);\n      if (result) return result;\n    }\n  };\n\n  GLTFParser.prototype._invokeAll = function (func) {\n    var extensions = Object.values(this.plugins);\n    extensions.unshift(this);\n    var pending = [];\n\n    for (var i = 0; i < extensions.length; i++) {\n      pending.push(func(extensions[i]));\n    }\n\n    return Promise.all(pending);\n  };\n  /**\n   * Requests the specified dependency asynchronously, with caching.\n   * @param {string} type\n   * @param {number} index\n   * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n   */\n\n\n  GLTFParser.prototype.getDependency = function (type, index) {\n    var cacheKey = type + ':' + index;\n    var dependency = this.cache.get(cacheKey);\n\n    if (!dependency) {\n      switch (type) {\n        case 'scene':\n          dependency = this.loadScene(index);\n          break;\n\n        case 'node':\n          dependency = this.loadNode(index);\n          break;\n\n        case 'mesh':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadMesh && ext.loadMesh(index);\n          });\n          break;\n\n        case 'accessor':\n          dependency = this.loadAccessor(index);\n          break;\n\n        case 'bufferView':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadBufferView && ext.loadBufferView(index);\n          });\n          break;\n\n        case 'buffer':\n          dependency = this.loadBuffer(index);\n          break;\n\n        case 'material':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadMaterial && ext.loadMaterial(index);\n          });\n          break;\n\n        case 'texture':\n          dependency = this.loadTexture(index);\n          break;\n\n        case 'skin':\n          dependency = this.loadSkin(index);\n          break;\n\n        case 'animation':\n          dependency = this.loadAnimation(index);\n          break;\n\n        case 'camera':\n          dependency = this.loadCamera(index);\n          break;\n\n        case 'light':\n          dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n          break;\n\n        default:\n          throw new Error('Unknown type: ' + type);\n      }\n\n      this.cache.add(cacheKey, dependency);\n    }\n\n    return dependency;\n  };\n  /**\n   * Requests all dependencies of the specified type asynchronously, with caching.\n   * @param {string} type\n   * @return {Promise<Array<Object>>}\n   */\n\n\n  GLTFParser.prototype.getDependencies = function (type) {\n    var dependencies = this.cache.get(type);\n\n    if (!dependencies) {\n      var parser = this;\n      var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n      dependencies = Promise.all(defs.map(function (def, index) {\n        return parser.getDependency(type, index);\n      }));\n      this.cache.add(type, dependencies);\n    }\n\n    return dependencies;\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n\n\n  GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n    var bufferDef = this.json.buffers[bufferIndex];\n    var loader = this.fileLoader;\n\n    if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n      throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n    } // If present, GLB container is required to be the first buffer.\n\n\n    if (bufferDef.uri === undefined && bufferIndex === 0) {\n      return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n    }\n\n    var options = this.options;\n    return new Promise(function (resolve, reject) {\n      loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n        reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n      });\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferViewIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n\n\n  GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n    var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n    return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n      var byteLength = bufferViewDef.byteLength || 0;\n      var byteOffset = bufferViewDef.byteOffset || 0;\n      return buffer.slice(byteOffset, byteOffset + byteLength);\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n   * @param {number} accessorIndex\n   * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n   */\n\n\n  GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n    var parser = this;\n    var json = this.json;\n    var accessorDef = this.json.accessors[accessorIndex];\n\n    if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n      // Ignore empty accessors, which may be used to declare runtime\n      // information about attributes coming from another source (e.g. Draco\n      // compression extension).\n      return Promise.resolve(null);\n    }\n\n    var pendingBufferViews = [];\n\n    if (accessorDef.bufferView !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n    } else {\n      pendingBufferViews.push(null);\n    }\n\n    if (accessorDef.sparse !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n    }\n\n    return Promise.all(pendingBufferViews).then(function (bufferViews) {\n      var bufferView = bufferViews[0];\n      var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n      var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType]; // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\n      var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n      var itemBytes = elementBytes * itemSize;\n      var byteOffset = accessorDef.byteOffset || 0;\n      var byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n      var normalized = accessorDef.normalized === true;\n      var array, bufferAttribute; // The buffer is not interleaved if the stride is the item size in bytes.\n\n      if (byteStride && byteStride !== itemBytes) {\n        // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n        // This makes sure that IBA.count reflects accessor.count properly\n        var ibSlice = Math.floor(byteOffset / byteStride);\n        var ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n        var ib = parser.cache.get(ibCacheKey);\n\n        if (!ib) {\n          array = new TypedArray(bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes); // Integer parameters to IB/IBA are in array elements, not bytes.\n\n          ib = new InterleavedBuffer(array, byteStride / elementBytes);\n          parser.cache.add(ibCacheKey, ib);\n        }\n\n        bufferAttribute = new InterleavedBufferAttribute(ib, itemSize, byteOffset % byteStride / elementBytes, normalized);\n      } else {\n        if (bufferView === null) {\n          array = new TypedArray(accessorDef.count * itemSize);\n        } else {\n          array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n        }\n\n        bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n      } // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\n\n      if (accessorDef.sparse !== undefined) {\n        var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n        var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n        var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n        var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n        var sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\n        var sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\n\n        if (bufferView !== null) {\n          // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n          bufferAttribute = new BufferAttribute(bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized);\n        }\n\n        for (var i = 0, il = sparseIndices.length; i < il; i++) {\n          var index = sparseIndices[i];\n          bufferAttribute.setX(index, sparseValues[i * itemSize]);\n          if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n          if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n          if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n          if (itemSize >= 5) throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n        }\n      }\n\n      return bufferAttribute;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n   * @param {number} textureIndex\n   * @return {Promise<THREE.Texture>}\n   */\n\n\n  GLTFParser.prototype.loadTexture = function (textureIndex) {\n    var parser = this;\n    var json = this.json;\n    var options = this.options;\n    var textureLoader = this.textureLoader;\n    var URL = self.URL || self.webkitURL;\n    var textureDef = json.textures[textureIndex];\n    var textureExtensions = textureDef.extensions || {};\n    var source;\n\n    if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n      source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n    } else {\n      source = json.images[textureDef.source];\n    }\n\n    var sourceURI = source.uri;\n    var isObjectURL = false;\n\n    if (source.bufferView !== undefined) {\n      // Load binary image data from bufferView, if provided.\n      sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n        isObjectURL = true;\n        var blob = new Blob([bufferView], {\n          type: source.mimeType\n        });\n        sourceURI = URL.createObjectURL(blob);\n        return sourceURI;\n      });\n    }\n\n    return Promise.resolve(sourceURI).then(function (sourceURI) {\n      // Load Texture resource.\n      var loader = options.manager.getHandler(sourceURI);\n\n      if (!loader) {\n        loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS] ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader : textureLoader;\n      }\n\n      return new Promise(function (resolve, reject) {\n        var onLoad = resolve;\n\n        if (loader.isImageBitmapLoader === true) {\n          onLoad = function onLoad(imageBitmap) {\n            resolve(new CanvasTexture(imageBitmap));\n          };\n        }\n\n        loader.load(resolveURL(sourceURI, options.path), onLoad, undefined, reject);\n      });\n    }).then(function (texture) {\n      // Clean up resources and configure Texture.\n      if (isObjectURL === true) {\n        URL.revokeObjectURL(sourceURI);\n      }\n\n      texture.flipY = false;\n      if (textureDef.name) texture.name = textureDef.name; // Ignore unknown mime types, like DDS files.\n\n      if (source.mimeType in MIME_TYPE_FORMATS) {\n        texture.format = MIME_TYPE_FORMATS[source.mimeType];\n      }\n\n      var samplers = json.samplers || {};\n      var sampler = samplers[textureDef.sampler] || {};\n      texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n      texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n      texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n      texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n      parser.associations.set(texture, {\n        type: 'textures',\n        index: textureIndex\n      });\n      return texture;\n    });\n  };\n  /**\n   * Asynchronously assigns a texture to the given material parameters.\n   * @param {Object} materialParams\n   * @param {string} mapName\n   * @param {Object} mapDef\n   * @return {Promise}\n   */\n\n\n  GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n    var parser = this;\n    return this.getDependency('texture', mapDef.index).then(function (texture) {\n      if (!texture.isCompressedTexture) {\n        switch (mapName) {\n          case 'aoMap':\n          case 'emissiveMap':\n          case 'metalnessMap':\n          case 'normalMap':\n          case 'roughnessMap':\n            texture.format = RGBFormat;\n            break;\n        }\n      } // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n      // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\n\n      if (mapDef.texCoord !== undefined && mapDef.texCoord != 0 && !(mapName === 'aoMap' && mapDef.texCoord == 1)) {\n        console.warn('THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.');\n      }\n\n      if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n        var transform = mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n\n        if (transform) {\n          var gltfReference = parser.associations.get(texture);\n          texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n          parser.associations.set(texture, gltfReference);\n        }\n      }\n\n      materialParams[mapName] = texture;\n    });\n  };\n  /**\n   * Assigns final material to a Mesh, Line, or Points instance. The instance\n   * already has a material (generated from the glTF material options alone)\n   * but reuse of the same glTF material may require multiple threejs materials\n   * to accomodate different primitive types, defines, etc. New materials will\n   * be created if necessary, and reused from a cache.\n   * @param  {Object3D} mesh Mesh, Line, or Points instance.\n   */\n\n\n  GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n    var geometry = mesh.geometry;\n    var material = mesh.material;\n    var useVertexTangents = geometry.attributes.tangent !== undefined;\n    var useVertexColors = geometry.attributes.color !== undefined;\n    var useFlatShading = geometry.attributes.normal === undefined;\n    var useSkinning = mesh.isSkinnedMesh === true;\n    var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n    var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n    if (mesh.isPoints) {\n      var cacheKey = 'PointsMaterial:' + material.uuid;\n      var pointsMaterial = this.cache.get(cacheKey);\n\n      if (!pointsMaterial) {\n        pointsMaterial = new PointsMaterial();\n        Material.prototype.copy.call(pointsMaterial, material);\n        pointsMaterial.color.copy(material.color);\n        pointsMaterial.map = material.map;\n        pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n        this.cache.add(cacheKey, pointsMaterial);\n      }\n\n      material = pointsMaterial;\n    } else if (mesh.isLine) {\n      var cacheKey = 'LineBasicMaterial:' + material.uuid;\n      var lineMaterial = this.cache.get(cacheKey);\n\n      if (!lineMaterial) {\n        lineMaterial = new LineBasicMaterial();\n        Material.prototype.copy.call(lineMaterial, material);\n        lineMaterial.color.copy(material.color);\n        this.cache.add(cacheKey, lineMaterial);\n      }\n\n      material = lineMaterial;\n    } // Clone the material if it will be modified\n\n\n    if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n      var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n      if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n      if (useSkinning) cacheKey += 'skinning:';\n      if (useVertexTangents) cacheKey += 'vertex-tangents:';\n      if (useVertexColors) cacheKey += 'vertex-colors:';\n      if (useFlatShading) cacheKey += 'flat-shading:';\n      if (useMorphTargets) cacheKey += 'morph-targets:';\n      if (useMorphNormals) cacheKey += 'morph-normals:';\n      var cachedMaterial = this.cache.get(cacheKey);\n\n      if (!cachedMaterial) {\n        cachedMaterial = material.clone();\n        if (useSkinning) cachedMaterial.skinning = true;\n        if (useVertexTangents) cachedMaterial.vertexTangents = true;\n        if (useVertexColors) cachedMaterial.vertexColors = true;\n        if (useFlatShading) cachedMaterial.flatShading = true;\n        if (useMorphTargets) cachedMaterial.morphTargets = true;\n        if (useMorphNormals) cachedMaterial.morphNormals = true;\n        this.cache.add(cacheKey, cachedMaterial);\n        this.associations.set(cachedMaterial, this.associations.get(material));\n      }\n\n      material = cachedMaterial;\n    } // workarounds for mesh and geometry\n\n\n    if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n      geometry.setAttribute('uv2', geometry.attributes.uv);\n    } // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\n\n    if (material.normalScale && !useVertexTangents) {\n      material.normalScale.y = -material.normalScale.y;\n    }\n\n    if (material.clearcoatNormalScale && !useVertexTangents) {\n      material.clearcoatNormalScale.y = -material.clearcoatNormalScale.y;\n    }\n\n    mesh.material = material;\n  };\n\n  GLTFParser.prototype.getMaterialType = function ()\n  /* materialIndex */\n  {\n    return MeshStandardMaterial;\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n   * @param {number} materialIndex\n   * @return {Promise<Material>}\n   */\n\n\n  GLTFParser.prototype.loadMaterial = function (materialIndex) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions;\n    var materialDef = json.materials[materialIndex];\n    var materialType;\n    var materialParams = {};\n    var materialExtensions = materialDef.extensions || {};\n    var pending = [];\n\n    if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n      var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n      materialType = sgExtension.getMaterialType();\n      pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n    } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n      var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n      materialType = kmuExtension.getMaterialType();\n      pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n    } else {\n      // Specification:\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n      var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n      materialParams.color = new Color(1.0, 1.0, 1.0);\n      materialParams.opacity = 1.0;\n\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n\n      materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n      materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n      if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture));\n        pending.push(parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture));\n      }\n\n      materialType = this._invokeOne(function (ext) {\n        return ext.getMaterialType && ext.getMaterialType(materialIndex);\n      });\n      pending.push(this._invokeAll(function (ext) {\n        return ext.extendMaterialParams && ext.extendMaterialParams(materialIndex, materialParams);\n      }));\n    }\n\n    if (materialDef.doubleSided === true) {\n      materialParams.side = DoubleSide;\n    }\n\n    var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n    if (alphaMode === ALPHA_MODES.BLEND) {\n      materialParams.transparent = true; // See: https://github.com/mrdoob/three.js/issues/17706\n\n      materialParams.depthWrite = false;\n    } else {\n      materialParams.transparent = false;\n\n      if (alphaMode === ALPHA_MODES.MASK) {\n        materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n      }\n    }\n\n    if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n      materialParams.normalScale = new Vector2(1, 1);\n\n      if (materialDef.normalTexture.scale !== undefined) {\n        materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n      }\n    }\n\n    if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n\n      if (materialDef.occlusionTexture.strength !== undefined) {\n        materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n      }\n    }\n\n    if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n      materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n    }\n\n    if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n    }\n\n    return Promise.all(pending).then(function () {\n      var material;\n\n      if (materialType === GLTFMeshStandardSGMaterial) {\n        material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n      } else {\n        material = new materialType(materialParams);\n      }\n\n      if (materialDef.name) material.name = materialDef.name; // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\n      if (material.map) material.map.encoding = sRGBEncoding;\n      if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n      assignExtrasToUserData(material, materialDef);\n      parser.associations.set(material, {\n        type: 'materials',\n        index: materialIndex\n      });\n      if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n      return material;\n    });\n  };\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   */\n\n\n  function computeBounds(geometry, primitiveDef, parser) {\n    var attributes = primitiveDef.attributes;\n    var box = new Box3();\n\n    if (attributes.POSITION !== undefined) {\n      var accessor = parser.json.accessors[attributes.POSITION];\n      var min = accessor.min;\n      var max = accessor.max; // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n      if (min !== undefined && max !== undefined) {\n        box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n      } else {\n        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n        return;\n      }\n    } else {\n      return;\n    }\n\n    var targets = primitiveDef.targets;\n\n    if (targets !== undefined) {\n      var maxDisplacement = new Vector3();\n      var vector = new Vector3();\n\n      for (var i = 0, il = targets.length; i < il; i++) {\n        var target = targets[i];\n\n        if (target.POSITION !== undefined) {\n          var accessor = parser.json.accessors[target.POSITION];\n          var min = accessor.min;\n          var max = accessor.max; // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n          if (min !== undefined && max !== undefined) {\n            // we need to get max of absolute components because target weight is [-1,1]\n            vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n            vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n            vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2]))); // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n            // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n            // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n            // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\n            maxDisplacement.max(vector);\n          } else {\n            console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n          }\n        }\n      } // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\n\n      box.expandByVector(maxDisplacement);\n    }\n\n    geometry.boundingBox = box;\n    var sphere = new Sphere();\n    box.getCenter(sphere.center);\n    sphere.radius = box.min.distanceTo(box.max) / 2;\n    geometry.boundingSphere = sphere;\n  }\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   * @return {Promise<BufferGeometry>}\n   */\n\n\n  function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n    var attributes = primitiveDef.attributes;\n    var pending = [];\n\n    function assignAttributeAccessor(accessorIndex, attributeName) {\n      return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n        geometry.setAttribute(attributeName, accessor);\n      });\n    }\n\n    for (var gltfAttributeName in attributes) {\n      var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase(); // Skip attributes already provided by e.g. Draco extension.\n\n      if (threeAttributeName in geometry.attributes) continue;\n      pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n    }\n\n    if (primitiveDef.indices !== undefined && !geometry.index) {\n      var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n        geometry.setIndex(accessor);\n      });\n      pending.push(accessor);\n    }\n\n    assignExtrasToUserData(geometry, primitiveDef);\n    computeBounds(geometry, primitiveDef, parser);\n    return Promise.all(pending).then(function () {\n      return primitiveDef.targets !== undefined ? addMorphTargets(geometry, primitiveDef.targets, parser) : geometry;\n    });\n  }\n  /**\n   * @param {BufferGeometry} geometry\n   * @param {Number} drawMode\n   * @return {BufferGeometry}\n   */\n\n\n  function toTrianglesDrawMode(geometry, drawMode) {\n    var index = geometry.getIndex(); // generate index if not present\n\n    if (index === null) {\n      var indices = [];\n      var position = geometry.getAttribute('position');\n\n      if (position !== undefined) {\n        for (var i = 0; i < position.count; i++) {\n          indices.push(i);\n        }\n\n        geometry.setIndex(indices);\n        index = geometry.getIndex();\n      } else {\n        console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.');\n        return geometry;\n      }\n    } //\n\n\n    var numberOfTriangles = index.count - 2;\n    var newIndices = [];\n\n    if (drawMode === TriangleFanDrawMode) {\n      // gl.TRIANGLE_FAN\n      for (var i = 1; i <= numberOfTriangles; i++) {\n        newIndices.push(index.getX(0));\n        newIndices.push(index.getX(i));\n        newIndices.push(index.getX(i + 1));\n      }\n    } else {\n      // gl.TRIANGLE_STRIP\n      for (var i = 0; i < numberOfTriangles; i++) {\n        if (i % 2 === 0) {\n          newIndices.push(index.getX(i));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i + 2));\n        } else {\n          newIndices.push(index.getX(i + 2));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i));\n        }\n      }\n    }\n\n    if (newIndices.length / 3 !== numberOfTriangles) {\n      console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n    } // build final geometry\n\n\n    var newGeometry = geometry.clone();\n    newGeometry.setIndex(newIndices);\n    return newGeometry;\n  }\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n   *\n   * Creates BufferGeometries from primitives.\n   *\n   * @param {Array<GLTF.Primitive>} primitives\n   * @return {Promise<Array<BufferGeometry>>}\n   */\n\n\n  GLTFParser.prototype.loadGeometries = function (primitives) {\n    var parser = this;\n    var extensions = this.extensions;\n    var cache = this.primitiveCache;\n\n    function createDracoPrimitive(primitive) {\n      return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive, parser).then(function (geometry) {\n        return addPrimitiveAttributes(geometry, primitive, parser);\n      });\n    }\n\n    var pending = [];\n\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var primitive = primitives[i];\n      var cacheKey = createPrimitiveKey(primitive); // See if we've already created this geometry\n\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        // Use the cached geometry if it exists\n        pending.push(cached.promise);\n      } else {\n        var geometryPromise;\n\n        if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n          // Use DRACO geometry if available\n          geometryPromise = createDracoPrimitive(primitive);\n        } else {\n          // Otherwise create a new geometry\n          geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n        } // Cache this geometry\n\n\n        cache[cacheKey] = {\n          primitive: primitive,\n          promise: geometryPromise\n        };\n        pending.push(geometryPromise);\n      }\n    }\n\n    return Promise.all(pending);\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n   * @param {number} meshIndex\n   * @return {Promise<Group|Mesh|SkinnedMesh>}\n   */\n\n\n  GLTFParser.prototype.loadMesh = function (meshIndex) {\n    var parser = this;\n    var json = this.json;\n    var meshDef = json.meshes[meshIndex];\n    var primitives = meshDef.primitives;\n    var pending = [];\n\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var material = primitives[i].material === undefined ? createDefaultMaterial(this.cache) : this.getDependency('material', primitives[i].material);\n      pending.push(material);\n    }\n\n    pending.push(parser.loadGeometries(primitives));\n    return Promise.all(pending).then(function (results) {\n      var materials = results.slice(0, results.length - 1);\n      var geometries = results[results.length - 1];\n      var meshes = [];\n\n      for (var i = 0, il = geometries.length; i < il; i++) {\n        var geometry = geometries[i];\n        var primitive = primitives[i]; // 1. create Mesh\n\n        var mesh;\n        var material = materials[i];\n\n        if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined) {\n          // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n          mesh = meshDef.isSkinnedMesh === true ? new SkinnedMesh(geometry, material) : new Mesh(geometry, material);\n\n          if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n            // we normalize floating point skin weight array to fix malformed assets (see #15319)\n            // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n            mesh.normalizeSkinWeights();\n          }\n\n          if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n          } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n          }\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n          mesh = new LineSegments(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n          mesh = new Line(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n          mesh = new LineLoop(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n          mesh = new Points(geometry, material);\n        } else {\n          throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n        }\n\n        if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n          updateMorphTargets(mesh, meshDef);\n        }\n\n        mesh.name = meshDef.name || 'mesh_' + meshIndex;\n        if (geometries.length > 1) mesh.name += '_' + i;\n        assignExtrasToUserData(mesh, meshDef);\n        parser.assignFinalMaterial(mesh);\n        meshes.push(mesh);\n      }\n\n      if (meshes.length === 1) {\n        return meshes[0];\n      }\n\n      var group = new Group();\n\n      for (var i = 0, il = meshes.length; i < il; i++) {\n        group.add(meshes[i]);\n      }\n\n      return group;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n   * @param {number} cameraIndex\n   * @return {Promise<THREE.Camera>}\n   */\n\n\n  GLTFParser.prototype.loadCamera = function (cameraIndex) {\n    var camera;\n    var cameraDef = this.json.cameras[cameraIndex];\n    var params = cameraDef[cameraDef.type];\n\n    if (!params) {\n      console.warn('THREE.GLTFLoader: Missing camera parameters.');\n      return;\n    }\n\n    if (cameraDef.type === 'perspective') {\n      camera = new PerspectiveCamera(MathUtils.radToDeg(params.yfov), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6);\n    } else if (cameraDef.type === 'orthographic') {\n      camera = new OrthographicCamera(-params.xmag, params.xmag, params.ymag, -params.ymag, params.znear, params.zfar);\n    }\n\n    if (cameraDef.name) camera.name = cameraDef.name;\n    assignExtrasToUserData(camera, cameraDef);\n    return Promise.resolve(camera);\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n   * @param {number} skinIndex\n   * @return {Promise<Object>}\n   */\n\n\n  GLTFParser.prototype.loadSkin = function (skinIndex) {\n    var skinDef = this.json.skins[skinIndex];\n    var skinEntry = {\n      joints: skinDef.joints\n    };\n\n    if (skinDef.inverseBindMatrices === undefined) {\n      return Promise.resolve(skinEntry);\n    }\n\n    return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n      skinEntry.inverseBindMatrices = accessor;\n      return skinEntry;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n   * @param {number} animationIndex\n   * @return {Promise<AnimationClip>}\n   */\n\n\n  GLTFParser.prototype.loadAnimation = function (animationIndex) {\n    var json = this.json;\n    var animationDef = json.animations[animationIndex];\n    var pendingNodes = [];\n    var pendingInputAccessors = [];\n    var pendingOutputAccessors = [];\n    var pendingSamplers = [];\n    var pendingTargets = [];\n\n    for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n      var channel = animationDef.channels[i];\n      var sampler = animationDef.samplers[channel.sampler];\n      var target = channel.target;\n      var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\n      var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n      var output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n      pendingNodes.push(this.getDependency('node', name));\n      pendingInputAccessors.push(this.getDependency('accessor', input));\n      pendingOutputAccessors.push(this.getDependency('accessor', output));\n      pendingSamplers.push(sampler);\n      pendingTargets.push(target);\n    }\n\n    return Promise.all([Promise.all(pendingNodes), Promise.all(pendingInputAccessors), Promise.all(pendingOutputAccessors), Promise.all(pendingSamplers), Promise.all(pendingTargets)]).then(function (dependencies) {\n      var nodes = dependencies[0];\n      var inputAccessors = dependencies[1];\n      var outputAccessors = dependencies[2];\n      var samplers = dependencies[3];\n      var targets = dependencies[4];\n      var tracks = [];\n\n      for (var i = 0, il = nodes.length; i < il; i++) {\n        var node = nodes[i];\n        var inputAccessor = inputAccessors[i];\n        var outputAccessor = outputAccessors[i];\n        var sampler = samplers[i];\n        var target = targets[i];\n        if (node === undefined) continue;\n        node.updateMatrix();\n        node.matrixAutoUpdate = true;\n        var TypedKeyframeTrack;\n\n        switch (PATH_PROPERTIES[target.path]) {\n          case PATH_PROPERTIES.weights:\n            TypedKeyframeTrack = NumberKeyframeTrack;\n            break;\n\n          case PATH_PROPERTIES.rotation:\n            TypedKeyframeTrack = QuaternionKeyframeTrack;\n            break;\n\n          case PATH_PROPERTIES.position:\n          case PATH_PROPERTIES.scale:\n          default:\n            TypedKeyframeTrack = VectorKeyframeTrack;\n            break;\n        }\n\n        var targetName = node.name ? node.name : node.uuid;\n        var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n        var targetNames = [];\n\n        if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n          // Node may be a Group (glTF mesh with several primitives) or a Mesh.\n          node.traverse(function (object) {\n            if (object.isMesh === true && object.morphTargetInfluences) {\n              targetNames.push(object.name ? object.name : object.uuid);\n            }\n          });\n        } else {\n          targetNames.push(targetName);\n        }\n\n        var outputArray = outputAccessor.array;\n\n        if (outputAccessor.normalized) {\n          var scale;\n\n          if (outputArray.constructor === Int8Array) {\n            scale = 1 / 127;\n          } else if (outputArray.constructor === Uint8Array) {\n            scale = 1 / 255;\n          } else if (outputArray.constructor == Int16Array) {\n            scale = 1 / 32767;\n          } else if (outputArray.constructor === Uint16Array) {\n            scale = 1 / 65535;\n          } else {\n            throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n          }\n\n          var scaled = new Float32Array(outputArray.length);\n\n          for (var j = 0, jl = outputArray.length; j < jl; j++) {\n            scaled[j] = outputArray[j] * scale;\n          }\n\n          outputArray = scaled;\n        }\n\n        for (var j = 0, jl = targetNames.length; j < jl; j++) {\n          var track = new TypedKeyframeTrack(targetNames[j] + '.' + PATH_PROPERTIES[target.path], inputAccessor.array, outputArray, interpolation); // Override interpolation with custom factory method.\n\n          if (sampler.interpolation === 'CUBICSPLINE') {\n            track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n              // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n              // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n              // must be divided by three to get the interpolant's sampleSize argument.\n              return new GLTFCubicSplineInterpolant(this.times, this.values, this.getValueSize() / 3, result);\n            }; // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\n\n            track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n          }\n\n          tracks.push(track);\n        }\n      }\n\n      var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n      return new AnimationClip(name, undefined, tracks);\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n   * @param {number} nodeIndex\n   * @return {Promise<Object3D>}\n   */\n\n\n  GLTFParser.prototype.loadNode = function (nodeIndex) {\n    var json = this.json;\n    var extensions = this.extensions;\n    var parser = this;\n    var meshReferences = json.meshReferences;\n    var meshUses = json.meshUses;\n    var nodeDef = json.nodes[nodeIndex];\n    return function () {\n      var pending = [];\n\n      if (nodeDef.mesh !== undefined) {\n        pending.push(parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n          var node;\n\n          if (meshReferences[nodeDef.mesh] > 1) {\n            var instanceNum = meshUses[nodeDef.mesh]++;\n            node = mesh.clone();\n            node.name += '_instance_' + instanceNum;\n          } else {\n            node = mesh;\n          } // if weights are provided on the node, override weights on the mesh.\n\n\n          if (nodeDef.weights !== undefined) {\n            node.traverse(function (o) {\n              if (!o.isMesh) return;\n\n              for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                o.morphTargetInfluences[i] = nodeDef.weights[i];\n              }\n            });\n          }\n\n          return node;\n        }));\n      }\n\n      if (nodeDef.camera !== undefined) {\n        pending.push(parser.getDependency('camera', nodeDef.camera));\n      }\n\n      if (nodeDef.extensions && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined) {\n        pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n      }\n\n      return Promise.all(pending);\n    }().then(function (objects) {\n      var node; // .isBone isn't in glTF spec. See .markDefs\n\n      if (nodeDef.isBone === true) {\n        node = new Bone();\n      } else if (objects.length > 1) {\n        node = new Group();\n      } else if (objects.length === 1) {\n        node = objects[0];\n      } else {\n        node = new Object3D();\n      }\n\n      if (node !== objects[0]) {\n        for (var i = 0, il = objects.length; i < il; i++) {\n          node.add(objects[i]);\n        }\n      }\n\n      if (nodeDef.name) {\n        node.userData.name = nodeDef.name;\n        node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n      }\n\n      assignExtrasToUserData(node, nodeDef);\n      if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n\n      if (nodeDef.matrix !== undefined) {\n        var matrix = new Matrix4();\n        matrix.fromArray(nodeDef.matrix);\n        node.applyMatrix4(matrix);\n      } else {\n        if (nodeDef.translation !== undefined) {\n          node.position.fromArray(nodeDef.translation);\n        }\n\n        if (nodeDef.rotation !== undefined) {\n          node.quaternion.fromArray(nodeDef.rotation);\n        }\n\n        if (nodeDef.scale !== undefined) {\n          node.scale.fromArray(nodeDef.scale);\n        }\n      }\n\n      parser.associations.set(node, {\n        type: 'nodes',\n        index: nodeIndex\n      });\n      return node;\n    });\n  };\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n   * @param {number} sceneIndex\n   * @return {Promise<Group>}\n   */\n\n\n  GLTFParser.prototype.loadScene = function () {\n    // scene node hierachy builder\n    function buildNodeHierachy(nodeId, parentObject, json, parser) {\n      var nodeDef = json.nodes[nodeId];\n      return parser.getDependency('node', nodeId).then(function (node) {\n        if (nodeDef.skin === undefined) return node; // build skeleton here as well\n\n        var skinEntry;\n        return parser.getDependency('skin', nodeDef.skin).then(function (skin) {\n          skinEntry = skin;\n          var pendingJoints = [];\n\n          for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n            pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n          }\n\n          return Promise.all(pendingJoints);\n        }).then(function (jointNodes) {\n          node.traverse(function (mesh) {\n            if (!mesh.isMesh) return;\n            var bones = [];\n            var boneInverses = [];\n\n            for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n              var jointNode = jointNodes[j];\n\n              if (jointNode) {\n                bones.push(jointNode);\n                var mat = new Matrix4();\n\n                if (skinEntry.inverseBindMatrices !== undefined) {\n                  mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                }\n\n                boneInverses.push(mat);\n              } else {\n                console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[j]);\n              }\n            }\n\n            mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n          });\n          return node;\n        });\n      }).then(function (node) {\n        // build node hierachy\n        parentObject.add(node);\n        var pending = [];\n\n        if (nodeDef.children) {\n          var children = nodeDef.children;\n\n          for (var i = 0, il = children.length; i < il; i++) {\n            var child = children[i];\n            pending.push(buildNodeHierachy(child, node, json, parser));\n          }\n        }\n\n        return Promise.all(pending);\n      });\n    }\n\n    return function loadScene(sceneIndex) {\n      var json = this.json;\n      var extensions = this.extensions;\n      var sceneDef = this.json.scenes[sceneIndex];\n      var parser = this; // Loader returns Group, not Scene.\n      // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\n      var scene = new Group();\n      if (sceneDef.name) scene.name = sceneDef.name;\n      assignExtrasToUserData(scene, sceneDef);\n      if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n      var nodeIds = sceneDef.nodes || [];\n      var pending = [];\n\n      for (var i = 0, il = nodeIds.length; i < il; i++) {\n        pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n      }\n\n      return Promise.all(pending).then(function () {\n        return scene;\n      });\n    };\n  }();\n\n  return GLTFLoader;\n}();\n\nexport { GLTFLoader };","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/node_modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["AnimationClip","Bone","Box3","BufferAttribute","BufferGeometry","CanvasTexture","ClampToEdgeWrapping","Color","DirectionalLight","DoubleSide","FileLoader","FrontSide","Group","ImageBitmapLoader","InterleavedBuffer","InterleavedBufferAttribute","Interpolant","InterpolateDiscrete","InterpolateLinear","Line","LineBasicMaterial","LineLoop","LineSegments","LinearFilter","LinearMipmapLinearFilter","LinearMipmapNearestFilter","Loader","LoaderUtils","Material","MathUtils","Matrix4","Mesh","MeshBasicMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MirroredRepeatWrapping","NearestFilter","NearestMipmapLinearFilter","NearestMipmapNearestFilter","NumberKeyframeTrack","Object3D","OrthographicCamera","PerspectiveCamera","PointLight","Points","PointsMaterial","PropertyBinding","QuaternionKeyframeTrack","RGBAFormat","RGBFormat","RepeatWrapping","Skeleton","SkinnedMesh","Sphere","SpotLight","TangentSpaceNormalMap","TextureLoader","TriangleFanDrawMode","TriangleStripDrawMode","Vector2","Vector3","VectorKeyframeTrack","sRGBEncoding","GLTFLoader","manager","call","dracoLoader","ddsLoader","pluginCallbacks","register","parser","GLTFMaterialsClearcoatExtension","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","resourcePath","path","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","setPath","setResponseType","setRequestHeader","requestHeader","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","callback","indexOf","push","unregister","splice","content","extensions","plugins","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","undefined","version","Error","GLTFParser","fileLoader","i","length","plugin","name","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","warn","setExtensions","setPlugins","GLTFRegistry","objects","get","key","add","object","remove","removeAll","KHR_MATERIALS_CLEARCOAT","extension","lightDefs","lights","loadLight","lightIndex","lightDef","lightNode","color","fromArray","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","extendMaterialParams","materialIndex","materials","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","repeat","texCoord","needsUpdate","GLTFMeshStandardSGMaterial","params","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","copy","source","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","WEBGL_WRAPPINGS","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","resolveURL","test","createDefaultMaterial","cache","transparent","depthTest","side","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","il","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","dracoExtension","geometryKey","indices","createAttributesKey","mode","attributesKey","keys","sort","options","associations","Map","primitiveCache","createImageBitmap","navigator","userAgent","textureLoader","setCrossOrigin","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","_invokeOne","func","_invokeAll","unshift","cacheKey","dependency","loadScene","loadNode","ext","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","accessorIndex","sparse","pendingBufferViews","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibSlice","floor","ibCacheKey","count","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setX","setY","setZ","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","isImageBitmapLoader","imageBitmap","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","gltfReference","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","setAttribute","y","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","alphaMode","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","computeBounds","box","accessor","min","max","maxDisplacement","vector","abs","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","addPrimitiveAttributes","assignAttributeAccessor","gltfAttributeName","setIndex","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","getX","newGeometry","loadGeometries","primitives","createDracoPrimitive","cached","promise","geometryPromise","meshIndex","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","camera","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","updateMatrix","matrixAutoUpdate","TypedKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","InterpolantFactoryMethodGLTFCubicSpline","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","o","light","sanitizeNodeName","matrix","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nimport {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tCanvasTexture,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tImageBitmapLoader,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternionKeyframeTrack,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTangentSpaceNormalMap,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t\tthis.pluginCallbacks = [];\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunregister: function ( callback ) {\n\n\t\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\t\t\tvar plugins = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\t\tfor ( var i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\t\tvar plugin = this.pluginCallbacks[ i ]( parser );\n\t\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t\t// Remove this workaround if we move all the existing\n\t\t\t\t// extension handlers to plugin system\n\t\t\t\textensions[ plugin.name ] = true;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.setExtensions( extensions );\n\t\t\tparser.setPlugins( plugins );\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendMaterialParams = function ( materialIndex, materialParams ) {\n\n\t\tvar parser = this.parser;\n\t\tvar materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\t\tif ( typeof createImageBitmap !== 'undefined' && /Firefox/.test( navigator.userAgent ) === false ) {\n\n\t\t\tthis.textureLoader = new ImageBitmapLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.setExtensions = function ( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t};\n\n\tGLTFParser.prototype.setPlugins = function ( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t};\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\tGLTFParser.prototype._invokeOne = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tvar result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t};\n\n\tGLTFParser.prototype._invokeAll = function ( func ) {\n\n\t\tvar extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tpending.push( func( extensions[ i ] ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tvar onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tresolve( new CanvasTexture( imageBitmap ) );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\tparser.associations.set( texture, {\n\t\t\t\ttype: 'textures',\n\t\t\t\tindex: textureIndex\n\t\t\t} );\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tvar gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', geometry.attributes.uv );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\tGLTFParser.prototype.getMaterialType = function ( /* materialIndex */ ) {\n\n\t\treturn MeshStandardMaterial;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { type: 'materials', index: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.associations.set( node, { type: 'nodes', index: nodeIndex } );\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"]},"metadata":{},"sourceType":"module"}