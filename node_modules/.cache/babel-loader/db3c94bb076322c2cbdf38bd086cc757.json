{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js\";\nimport React, { useRef } from 'react';\nimport * as THREE from 'three'; // A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane() {\n  const image = document.getElementsByClassName('image-plane')[0];\n  console.log(image);\n  console.log(image.dataset.src);\n  const urls = React.Children.map(children, child => {\n    return child.props.src;\n  });\n  const loader = new THREE.TextureLoader();\n  const imageTexture = loader.load(image.current.props.src);\n  const sizes = new THREE.Vector2(0, 0);\n  const offset = new THREE.Vector2(0, 0);\n\n  const _image$current$getBou = image.current.getBoundingClientRect(),\n        width = _image$current$getBou.width,\n        height = _image$current$getBou.height,\n        top = _image$current$getBou.top,\n        left = _image$current$getBou.left;\n\n  sizes.set(width, height);\n  offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2);\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [1, 1, 0],\n    scale: [100, 100, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ImagePlane;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js"],"names":["React","useRef","THREE","ImagePlane","image","document","getElementsByClassName","console","log","dataset","src","urls","Children","map","children","child","props","loader","TextureLoader","imageTexture","load","current","sizes","Vector2","offset","getBoundingClientRect","width","height","top","left","set","window","innerWidth","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,OAAN,CAAcC,GAA1B;AAEA,QAAMC,IAAI,GAAGX,KAAK,CAACY,QAAN,CAAeC,GAAf,CAAmBC,QAAnB,EAA8BC,KAAD,IAAW;AACnD,WAAOA,KAAK,CAACC,KAAN,CAAYN,GAAnB;AACD,GAFY,CAAb;AAIA,QAAMO,MAAM,GAAG,IAAIf,KAAK,CAACgB,aAAV,EAAf;AAEA,QAAMC,YAAY,GAAGF,MAAM,CAACG,IAAP,CAAYhB,KAAK,CAACiB,OAAN,CAAcL,KAAd,CAAoBN,GAAhC,CAArB;AACA,QAAMY,KAAK,GAAG,IAAIpB,KAAK,CAACqB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,CAAd;AACA,QAAMC,MAAM,GAAG,IAAItB,KAAK,CAACqB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,CAAf;;AAboB,gCAeiBnB,KAAK,CAACiB,OAAN,CAAcI,qBAAd,EAfjB;AAAA,QAeZC,KAfY,yBAeZA,KAfY;AAAA,QAeLC,MAfK,yBAeLA,MAfK;AAAA,QAeGC,GAfH,yBAeGA,GAfH;AAAA,QAeQC,IAfR,yBAeQA,IAfR;;AAiBpBP,EAAAA,KAAK,CAACQ,GAAN,CAAUJ,KAAV,EAAiBC,MAAjB;AACAH,EAAAA,MAAM,CAACM,GAAP,CAAWD,IAAI,GAAGE,MAAM,CAACC,UAAP,GAAoB,CAA3B,GAA+BN,KAAK,GAAG,CAAlD,EAAqD,CAACE,GAAD,GAAOG,MAAM,CAACE,WAAP,GAAqB,CAA5B,GAAgCN,MAAM,GAAG,CAA9F;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB;AAA2B,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAqB,IAAA,MAAM,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAexB,UAAf","sourcesContent":["import React, { useRef } from 'react'\nimport * as THREE from 'three'\n\n// A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane() {\n  const image = document.getElementsByClassName('image-plane')[0]\n  console.log(image)\n  console.log(image.dataset.src)\n\n  const urls = React.Children.map(children, (child) => {\n    return child.props.src\n  })\n\n  const loader = new THREE.TextureLoader()\n\n  const imageTexture = loader.load(image.current.props.src)\n  const sizes = new THREE.Vector2(0, 0)\n  const offset = new THREE.Vector2(0, 0)\n\n  const { width, height, top, left } = image.current.getBoundingClientRect()\n\n  sizes.set(width, height)\n  offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2)\n\n  return (\n    <mesh position={[1, 1, 0]} scale={[100, 100, 1]}>\n      <planeBufferGeometry attach=\"geometry\" args={[1, 1, 1, 1]} />\n      <meshBasicMaterial attach=\"material\" color=\"orange\" />\n    </mesh>\n  )\n}\n\nexport default ImagePlane\n"]},"metadata":{},"sourceType":"module"}