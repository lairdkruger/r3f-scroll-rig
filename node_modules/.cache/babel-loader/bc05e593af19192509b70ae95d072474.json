{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/shapes/Bars.js\";\nimport React, { useRef } from 'react';\nimport { Color } from 'three';\nimport { useThree } from 'react-three-fiber';\n\nfunction Bars(props) {\n  const inner = useRef();\n  const bars = useRef();\n\n  const _useThree = useThree(),\n        viewport = _useThree.viewport;\n\n  const barsStore = [{\n    id: 'bar1',\n    width: viewport.width / 10,\n    height: viewport.height,\n    color: new Color('#F00000')\n  }, {\n    id: 'bar2',\n    width: viewport.width / 5,\n    height: viewport.height,\n    color: new Color('#600000')\n  }];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: bars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, barsStore.map((bar, index) => /*#__PURE__*/React.createElement(\"mesh\", {\n    key: bar.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [2, 0.5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"#FFEDDD\",\n    toneMapped: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"group\", Object.assign({\n    ref: inner\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [2, 0.5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"#FFEDDD\",\n    toneMapped: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0, -0.625, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.5, 0.75],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"#FFEDDD\",\n    toneMapped: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0, 0.625, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.5, 0.75],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    color: \"#FFEDDD\",\n    toneMapped: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Bars;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/storm-scroll-rig/src/components/shapes/Bars.js"],"names":["React","useRef","Color","useThree","Bars","props","inner","bars","viewport","barsStore","id","width","height","color","map","bar","index"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport { Color } from 'three'\nimport { useThree } from 'react-three-fiber'\n\nfunction Bars(props) {\n  const inner = useRef()\n  const bars = useRef()\n\n  const { viewport } = useThree()\n\n  const barsStore = [\n    {\n      id: 'bar1',\n      width: viewport.width / 10,\n      height: viewport.height,\n      color: new Color('#F00000')\n    },\n    {\n      id: 'bar2',\n      width: viewport.width / 5,\n      height: viewport.height,\n      color: new Color('#600000')\n    }\n  ]\n\n  return (\n    <group ref={bars}>\n      {barsStore.map((bar, index) => (\n        <mesh key={bar.id}>\n          <planeBufferGeometry attach=\"geometry\" args={[2, 0.5]} />\n          <meshBasicMaterial attach=\"material\" color=\"#FFEDDD\" toneMapped={false} />\n        </mesh>\n      ))}\n      <group ref={inner} {...props}>\n        <mesh>\n          <planeBufferGeometry attach=\"geometry\" args={[2, 0.5]} />\n          <meshBasicMaterial attach=\"material\" color=\"#FFEDDD\" toneMapped={false} />\n        </mesh>\n        <mesh position={[0, -0.625, 0]}>\n          <planeBufferGeometry attach=\"geometry\" args={[0.5, 0.75]} />\n          <meshBasicMaterial attach=\"material\" color=\"#FFEDDD\" toneMapped={false} />\n        </mesh>\n        <mesh position={[0, 0.625, 0]}>\n          <planeBufferGeometry attach=\"geometry\" args={[0.5, 0.75]} />\n          <meshBasicMaterial attach=\"material\" color=\"#FFEDDD\" toneMapped={false} />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nexport default Bars\n"]},"metadata":{},"sourceType":"module"}