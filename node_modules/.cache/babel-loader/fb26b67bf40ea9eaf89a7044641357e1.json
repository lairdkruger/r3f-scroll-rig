{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js\";\nimport React, { useRef } from 'react';\nimport * as THREE from 'three'; // A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane({\n  children\n}) {\n  //   const images = children\n  //     const image = images[0]\n  const image = useRef(children);\n  console.log(image);\n  console.log(image.current.props.src);\n  const urls = React.Children.map(children, child => {\n    return child.props.src;\n  });\n  console.log('urls', urls);\n  const loader = new THREE.TextureLoader();\n  const imageTexture = loader.load(image.current.props.src);\n  const sizes = new THREE.Vector2(0, 0);\n  const offset = new THREE.Vector2(0, 0);\n\n  const _image$getBoundingCli = image.getBoundingClientRect(),\n        width = _image$getBoundingCli.width,\n        height = _image$getBoundingCli.height,\n        top = _image$getBoundingCli.top,\n        left = _image$getBoundingCli.left;\n\n  sizes.set(width, height);\n  offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2);\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [offset.x, offset.y, 0],\n    scale: [sizes.x, sizes.y, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    map: imageTexture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ImagePlane;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/React Experiments/r3f-scroll-rig/src/components/media/ImagePlane.js"],"names":["React","useRef","THREE","ImagePlane","children","image","console","log","current","props","src","urls","Children","map","child","loader","TextureLoader","imageTexture","load","sizes","Vector2","offset","getBoundingClientRect","width","height","top","left","set","window","innerWidth","innerHeight","x","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AAChC;AACA;AAEA,QAAMC,KAAK,GAAGJ,MAAM,CAACG,QAAD,CAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAN,CAAcC,KAAd,CAAoBC,GAAhC;AAEA,QAAMC,IAAI,GAAGX,KAAK,CAACY,QAAN,CAAeC,GAAf,CAAmBT,QAAnB,EAA8BU,KAAD,IAAW;AACnD,WAAOA,KAAK,CAACL,KAAN,CAAYC,GAAnB;AACD,GAFY,CAAb;AAIAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB;AAEA,QAAMI,MAAM,GAAG,IAAIb,KAAK,CAACc,aAAV,EAAf;AAEA,QAAMC,YAAY,GAAGF,MAAM,CAACG,IAAP,CAAYb,KAAK,CAACG,OAAN,CAAcC,KAAd,CAAoBC,GAAhC,CAArB;AACA,QAAMS,KAAK,GAAG,IAAIjB,KAAK,CAACkB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,CAAd;AACA,QAAMC,MAAM,GAAG,IAAInB,KAAK,CAACkB,OAAV,CAAkB,CAAlB,EAAqB,CAArB,CAAf;;AAlBgC,gCAoBKf,KAAK,CAACiB,qBAAN,EApBL;AAAA,QAoBxBC,KApBwB,yBAoBxBA,KApBwB;AAAA,QAoBjBC,MApBiB,yBAoBjBA,MApBiB;AAAA,QAoBTC,GApBS,yBAoBTA,GApBS;AAAA,QAoBJC,IApBI,yBAoBJA,IApBI;;AAsBhCP,EAAAA,KAAK,CAACQ,GAAN,CAAUJ,KAAV,EAAiBC,MAAjB;AACAH,EAAAA,MAAM,CAACM,GAAP,CAAWD,IAAI,GAAGE,MAAM,CAACC,UAAP,GAAoB,CAA3B,GAA+BN,KAAK,GAAG,CAAlD,EAAqD,CAACE,GAAD,GAAOG,MAAM,CAACE,WAAP,GAAqB,CAA5B,GAAgCN,MAAM,GAAG,CAA9F;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAE,CAACH,MAAM,CAACU,CAAR,EAAWV,MAAM,CAACW,CAAlB,EAAqB,CAArB,CAAhB;AAAyC,IAAA,KAAK,EAAE,CAACb,KAAK,CAACY,CAAP,EAAUZ,KAAK,CAACa,CAAhB,EAAmB,CAAnB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAqB,IAAA,MAAM,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAEf,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAed,UAAf","sourcesContent":["import React, { useRef } from 'react'\nimport * as THREE from 'three'\n\n// A 3D plane representing an HTML image element with CSS positioning\n\nfunction ImagePlane({ children }) {\n  //   const images = children\n  //     const image = images[0]\n\n  const image = useRef(children)\n  console.log(image)\n  console.log(image.current.props.src)\n\n  const urls = React.Children.map(children, (child) => {\n    return child.props.src\n  })\n\n  console.log('urls', urls)\n\n  const loader = new THREE.TextureLoader()\n\n  const imageTexture = loader.load(image.current.props.src)\n  const sizes = new THREE.Vector2(0, 0)\n  const offset = new THREE.Vector2(0, 0)\n\n  const { width, height, top, left } = image.getBoundingClientRect()\n\n  sizes.set(width, height)\n  offset.set(left - window.innerWidth / 2 + width / 2, -top + window.innerHeight / 2 - height / 2)\n\n  return (\n    <mesh position={[offset.x, offset.y, 0]} scale={[sizes.x, sizes.y, 1]}>\n      <planeBufferGeometry attach=\"geometry\" args={[1, 1, 1, 1]} />\n      <meshBasicMaterial attach=\"material\" map={imageTexture} />\n    </mesh>\n  )\n}\n\nexport default ImagePlane\n"]},"metadata":{},"sourceType":"module"}